CREATE TABLE class ( eid INTEGER PRIMARY KEY AUTOINCREMENT, class_name VARCHAR )
CREATE VIEW Any AS SELECT eid FROM class
CREATE TABLE '_soma_schemas' ( eid REFERENCES class( eid ) ON DELETE CASCADE, name VARCHAR NOT NULL, version VARCHAR NOT NULL ) 
CREATE TABLE '_soma_classes' ( eid REFERENCES class( eid ) ON DELETE CASCADE, name VARCHAR NOT NULL, base VARCHAR ) 
CREATE TABLE '_soma_attributes' ( eid REFERENCES class( eid ) ON DELETE CASCADE, soma_class INTEGER NOT NULL REFERENCES _soma_class( eid ), name VARCHAR NOT NULL, type VARCHAR NOT NULL, label VARCHAR, optional BOOLEAN NOT NULL, default_value VARCHAR ) 
CREATE TABLE '_Graph' ( eid REFERENCES class( eid ) ON DELETE CASCADE, name VARCHAR NOT NULL, side VARCHAR NOT NULL ) 
CREATE TABLE '_Vertex' ( eid REFERENCES class( eid ) ON DELETE CASCADE, graph INTEGER NOT NULL REFERENCES _Graph( eid ) ) 
CREATE TABLE '_Edge' ( eid REFERENCES class( eid ) ON DELETE CASCADE, vertex1 INTEGER NOT NULL REFERENCES _Vertex( eid ), vertex2 INTEGER NOT NULL REFERENCES _Vertex( eid ) ) 
CREATE TABLE '_BlobsArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, glb_global_tri VARCHAR, glb_tri VARCHAR, glb_filename STRING, glb_label STRING, indiv_graphs STRING, latitude VARCHAR, latitudes STRING, longitude VARCHAR, longitudes STRING, mesh VARCHAR, meshes STRING, representation_mesh VARCHAR, representation_meshes STRING, sujet VARCHAR, sujets STRING, texture VARCHAR, textures STRING, type VARCHAR, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tri VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_ClusterArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, ClusterArg_VERSION VARCHAR, Tal_boundingbox_max STRING, Tal_boundingbox_min STRING, Talairach_rotation STRING, Talairach_scale STRING, Talairach_translation STRING, Tmtktri_global_tri VARCHAR, Tmtktri_filename STRING, Tmtktri_label STRING, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, bucket_Volume_filename VARCHAR, bucket_filename STRING, bucket_label STRING, cluster_bck VARCHAR, cluster_global_bck VARCHAR, cluster_global_tri VARCHAR, cluster_global_vol VARCHAR, cluster_tri VARCHAR, cluster_Volume_filename VARCHAR, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, label_property VARCHAR, maximum_global_tri VARCHAR, maxscale FLOAT, mesh_filename_maximum STRING, mesh_filename_minimum STRING, mesh_filename_minimum2 STRING, minimum_global_tri VARCHAR, minimum2_global_tri VARCHAR, minscale FLOAT, origin STRING, roi_label_maximum STRING, roi_label_minimum STRING, roi_label_minimum2 STRING, scales STRING, spm_normalized INTEGER, spm_radio_convention INTEGER, spm_spm2_normalization INTEGER, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tex VARCHAR, type_global_tri VARCHAR, type_global_vol VARCHAR, type_tex VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_CorticalFoldArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, CSF_volume FLOAT, CorticalFoldArg_VERSION VARCHAR, GM_filename STRING, GM_label STRING, GM_volume FLOAT, LCR_filename STRING, LCR_label STRING, LCR_volume FLOAT, Tal_boundingbox_max STRING, Tal_boundingbox_min STRING, Talairach_rotation STRING, Talairach_scale STRING, Talairach_translation STRING, Tmtktri_global_tri VARCHAR, Tmtktri_tri VARCHAR, Tmtktri_filename STRING, Tmtktri_label STRING, WM_filename STRING, WM_label STRING, anterior_commissure STRING, bottom_bck VARCHAR, bottom_global_bck VARCHAR, bottom_filename STRING, bottom_label STRING, bottom_mesh_filename STRING, bottom_mesh_label STRING, bottom_volume_filename VARCHAR, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, brain_hull_area FLOAT, brain_hull_volume FLOAT, cortexHemi_filename STRING, cortexHemi_label STRING, cortexWhite_filename STRING, cortexWhite_label STRING, cortical_bck VARCHAR, cortical_global_bck VARCHAR, cortical_global_vol VARCHAR, cortical_Volume_filename VARCHAR, cortical_filename STRING, cortical_label STRING, cortical_mesh_filename STRING, cortical_mesh_label STRING, custom_num_val FLOAT, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, flipped_hemispheres INTEGER, fold_bck VARCHAR, fold_global_bck VARCHAR, fold_global_tri VARCHAR, fold_global_vol VARCHAR, fold_tri VARCHAR, folds_area FLOAT, hull_junction_bck VARCHAR, hull_junction_global_bck VARCHAR, hull_junction_global_vol VARCHAR, hull_junction_Volume_filename VARCHAR, hull_junction_filename STRING, hull_junction_label STRING, interhemi_point STRING, junction_bck VARCHAR, junction_global_bck VARCHAR, junction_global_vol VARCHAR, junction_Volume_filename VARCHAR, junction_filename STRING, junction_label STRING, junction_mesh_filename STRING, junction_mesh_label STRING, label_property VARCHAR, oldtri_filename STRING, oldtri_label STRING, origin STRING, other_bck VARCHAR, other_global_bck VARCHAR, other_Volume_filename VARCHAR, other_filename STRING, other_label STRING, other_mesh_filename STRING, other_mesh_label STRING, plidepassage_bck VARCHAR, plidepassage_global_bck VARCHAR, plidepassage_Volume_filename VARCHAR, plidepassage_filename STRING, plidepassage_label STRING, plidepassage_mesh_filename STRING, plidepassage_mesh_label STRING, posterior_commissure STRING, refbrain_hull_area FLOAT, refbrain_hull_volume FLOAT, reffolds_area FLOAT, reftotal_sulci_length FLOAT, spm_normalized INTEGER, spm_radio_convention INTEGER, spm_spm2_normalization INTEGER, ss_bck VARCHAR, ss_global_bck VARCHAR, ss_Volume_filename VARCHAR, ss_filename STRING, ss_label STRING, ss_mesh_filename STRING, ss_mesh_label STRING, thickness_mean FLOAT, thickness_std FLOAT, total_sulci_length FLOAT, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tex VARCHAR, type_global_tri VARCHAR, type_global_vol VARCHAR, type_tex VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_NucleusArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, NucleusArg_VERSION VARCHAR, Tmtktri_global_bck VARCHAR, Tmtktri_filename STRING, Tmtktri_label STRING, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, bucket_bck VARCHAR, bucket_global_bck VARCHAR, bucket_global_tri VARCHAR, bucket_global_vol VARCHAR, bucket_tri VARCHAR, bucket_filename STRING, bucket_label STRING, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, label_property VARCHAR, nucleus_bck VARCHAR, nucleus_global_bck VARCHAR, nucleus_global_tri VARCHAR, nucleus_global_vol VARCHAR, nucleus_tri VARCHAR, origin STRING, roi_bck VARCHAR, roi_global_bck VARCHAR, roi_global_tri VARCHAR, roi_global_vol VARCHAR, roi_tri VARCHAR, spm_normalized INTEGER, spm_radio_convention INTEGER, spm_spm2_normalization INTEGER, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tri VARCHAR, type_global_vol VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_PrimalSketchArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, blob_filename VARCHAR, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, label_property VARCHAR, ssblob_bck VARCHAR, ssblob_global_bck VARCHAR, ssblob_global_tri VARCHAR, ssblob_tri VARCHAR, sujet VARCHAR, type VARCHAR, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tri VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_RoiArg' ( eid REFERENCES class( eid ) ON DELETE CASCADE, RoiArg_VERSION VARCHAR, Tmtktri_filename STRING, anterior_commissure STRING, boundingbox_max STRING NOT NULL, boundingbox_min STRING NOT NULL, bucket_filename STRING, datagraph_VERSION VARCHAR, datagraph_compatibility_model_VERSION VARCHAR, filename_base VARCHAR, interhemi_point STRING, label_property VARCHAR, origin STRING, posterior_commissure STRING, roi_bck VARCHAR, roi_global_bck VARCHAR, roi_global_tri VARCHAR, roi_global_vol VARCHAR, roi_tri VARCHAR, roi_Volume_filename VARCHAR, roi_junction_global_tri VARCHAR, roi_junction_tri VARCHAR, roi_mesh_filename STRING, roi_mesh_junction_filename STRING, roi_mesh_junction_label STRING, roi_mesh_label STRING, spm_normalized INTEGER, spm_radio_convention INTEGER, spm_spm2_normalization INTEGER, type_bck VARCHAR, type_global_bck VARCHAR, type_global_tri VARCHAR, type_global_vol VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_b2b' ( eid REFERENCES class( eid ) ON DELETE CASCADE, similarity FLOAT, type VARCHAR ) 
CREATE TABLE '_bifurcation' ( eid REFERENCES class( eid ) ON DELETE CASCADE, blob_down INTEGER, blob_up INTEGER, type VARCHAR ) 
CREATE TABLE '_blob_saddle_link' ( eid REFERENCES class( eid ) ON DELETE CASCADE ) 
CREATE TABLE '_cluster' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Talairach_par_mm_endpar_ STRING, Tmtktri_filename VARCHAR, Tmtktri_label INTEGER, apparitionflag INTEGER, blob_saddle_type VARCHAR, bucket_filename VARCHAR, bucket_label INTEGER, cluster_filename VARCHAR, cluster_label INTEGER, custom_num_val FLOAT, gravity_center STRING, gray_level_blobs STRING, graph_index INTEGER, jamflag_down INTEGER, jamflag_up INTEGER, label VARCHAR, lifetime FLOAT, maximum FLOAT, maximum_filename VARCHAR, maximum_label INTEGER, maximum_position STRING, maxscale FLOAT, mesh_filename_maximum VARCHAR, mesh_filename_minimum VARCHAR, mesh_filename_minimum2 VARCHAR, minimum FLOAT, minimum2_filename VARCHAR, minimum2_label INTEGER, minimum_filename VARCHAR, minimum_label INTEGER, minimum_position STRING, minscale FLOAT, name VARCHAR NOT NULL, point_number INTEGER, roi_label INTEGER, roi_label_maximum INTEGER, roi_label_minimum INTEGER, roi_label_minimum2 INTEGER, scale FLOAT, size FLOAT, surface FLOAT, volume FLOAT, wflag_down INTEGER, wflag_up INTEGER ) 
CREATE TABLE '_cortical' ( eid REFERENCES class( eid ) ON DELETE CASCADE, SS1nearest STRING, SS2nearest STRING, cortical_filename VARCHAR, cortical_label INTEGER, cortical_mesh_filename VARCHAR, cortical_mesh_label INTEGER, dist FLOAT, length FLOAT, point_number INTEGER NOT NULL, refSS1nearest STRING, refSS2nearest STRING, refdist FLOAT, reflength FLOAT, refmean_connected_dir STRING, refmean_connected_dist FLOAT, refsize FLOAT, refstd_connected_dist FLOAT, roi_label INTEGER, size FLOAT NOT NULL ) 
CREATE TABLE '_fold' ( eid REFERENCES class( eid ) ON DELETE CASCADE, CSF_volume FLOAT, GM_filename VARCHAR, GM_label INTEGER, GM_volume FLOAT, LCR_filename VARCHAR, LCR_label INTEGER, LCR_volume FLOAT, Tal_boundingbox_max STRING, Tal_boundingbox_min STRING, Tmtktri_filename VARCHAR, Tmtktri_label INTEGER, WM_filename VARCHAR, WM_label INTEGER, bottom_filename VARCHAR, bottom_label INTEGER, bottom_mesh_filename VARCHAR, bottom_mesh_label INTEGER, bottom_point_number INTEGER NOT NULL, boundingbox_max STRING, boundingbox_min STRING, cortexHemi_filename VARCHAR, cortexHemi_label INTEGER, cortexWhite_filename VARCHAR, cortexWhite_label INTEGER, custom_num_val FLOAT, depth_direction STRING, depth_direction_weight FLOAT, direction STRING, gravity_center STRING, grey_surface_area FLOAT, hull_normal STRING, hull_normal_weight FLOAT, graph_index INTEGER, label VARCHAR, maxdepth FLOAT, mean_depth FLOAT, mid_interface_voxels INTEGER, mindepth FLOAT, moments STRING, name VARCHAR NOT NULL, normal STRING, oldtri_filename VARCHAR, oldtri_label INTEGER, other_filename VARCHAR, other_label INTEGER, other_mesh_filename VARCHAR, other_mesh_label INTEGER, other_point_number INTEGER, point_number INTEGER NOT NULL, refdepth_direction STRING, refdirection STRING, refgravity_center STRING, refhull_normal STRING, refmaxdepth FLOAT, refmean_depth FLOAT, refmindepth FLOAT, refmoments STRING, refnormal STRING, refsize FLOAT, refsurface_area FLOAT, rootsbassin INTEGER, size FLOAT NOT NULL, skeleton_label INTEGER NOT NULL, ss_filename VARCHAR, ss_label INTEGER, ss_mesh_filename VARCHAR, ss_mesh_label INTEGER, ss_point_number INTEGER NOT NULL, surface_area FLOAT, talcovar STRING, thickness_mean FLOAT, thickness_std FLOAT, used_labels STRING, white_surface_area FLOAT ) 
CREATE TABLE '_fold_name' ( eid REFERENCES class( eid ) ON DELETE CASCADE, color STRING, label VARCHAR, name VARCHAR NOT NULL ) 
CREATE TABLE '_glb' ( eid REFERENCES class( eid ) ON DELETE CASCADE, boundingbox_max STRING, boundingbox_min STRING, glb_filename VARCHAR, glb_label INTEGER, graph_index INTEGER, nodes STRING, scale FLOAT, t FLOAT, tValue FLOAT ) 
CREATE TABLE '_graphe_sillon' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Tal_boundingbox_max STRING, Tal_boundingbox_min STRING, Talairach_rotation STRING, Talairach_scale STRING, Talairach_translation STRING, Tmtktri_filename STRING, anterior_commissure STRING, bottom_filename STRING, boundingbox_max STRING, boundingbox_min STRING, cortical_bck VARCHAR, cortical_global_bck VARCHAR, filename_base VARCHAR NOT NULL, fold_bck VARCHAR, fold_tri VARCHAR, gravity_center STRING, hull_junction_bck VARCHAR, interhemi_point STRING, junction_bck VARCHAR, oldtri_filename STRING, other_filename STRING, plidepassage_bck VARCHAR, posterior_commissure STRING, roi_label INTEGER, ss_filename STRING, type_bck VARCHAR, type_tri VARCHAR, voxel_size STRING NOT NULL ) 
CREATE TABLE '_hierarchy' ( eid REFERENCES class( eid ) ON DELETE CASCADE, graph_syntax VARCHAR NOT NULL ) 
CREATE TABLE '_hull' ( eid REFERENCES class( eid ) ON DELETE CASCADE, graph_index INTEGER, name VARCHAR NOT NULL, point_number INTEGER, size FLOAT, skeleton_label INTEGER ) 
CREATE TABLE '_hull_junction' ( eid REFERENCES class( eid ) ON DELETE CASCADE, direction STRING, extremity1 STRING, extremity2 STRING, junction_filename VARCHAR, junction_label INTEGER, junction_mesh_filename VARCHAR, junction_mesh_label INTEGER, length FLOAT, point_number INTEGER NOT NULL, refdirection STRING, refextremity1 STRING, refextremity2 STRING, reflength FLOAT, refsize FLOAT, size FLOAT NOT NULL ) 
CREATE TABLE '_junction' ( eid REFERENCES class( eid ) ON DELETE CASCADE, direction STRING, extremity1 STRING, extremity2 STRING, junction_filename VARCHAR, junction_label INTEGER, junction_mesh_filename VARCHAR, junction_mesh_label INTEGER, length FLOAT, maxdepth FLOAT, mindepth FLOAT, point_number INTEGER NOT NULL, refdirection STRING, refextremity1 STRING, refextremity2 STRING, reflength FLOAT, refmaxdepth FLOAT, refmindepth FLOAT, refsize FLOAT, roi_label INTEGER, size FLOAT NOT NULL ) 
CREATE TABLE '_model_edge' ( eid REFERENCES class( eid ) ON DELETE CASCADE, label1 VARCHAR NOT NULL, label2 VARCHAR NOT NULL, model_file VARCHAR NOT NULL, noinstance_count INTEGER, occurence_count INTEGER ) 
CREATE TABLE '_model_graph' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Tmtktri_filename STRING, default_model_file VARCHAR, default_nomenclature VARCHAR, default_selector VARCHAR, filename_base VARCHAR, fold_tri VARCHAR, label_list STRING, model_VERSION VARCHAR, model_compatibility_data_VERSION VARCHAR, model_file VARCHAR, model_finder VARCHAR, nbase_graphs INTEGER, type_tri VARCHAR, void_label VARCHAR ) 
CREATE TABLE '_model_node' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Tmtktri_filename VARCHAR, domain_file VARCHAR NOT NULL, label VARCHAR NOT NULL, model_file VARCHAR NOT NULL, noinstance_count INTEGER, occurence_count INTEGER ) 
CREATE TABLE '_nucleus' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Tmtktri_filename VARCHAR, Tmtktri_label INTEGER, bucket_filename VARCHAR, bucket_label INTEGER, graph_index INTEGER, name VARCHAR NOT NULL, point_number INTEGER, roi_label INTEGER, size FLOAT ) 
CREATE TABLE '_plidepassage' ( eid REFERENCES class( eid ) ON DELETE CASCADE, depth FLOAT, location STRING, plidepassage_filename VARCHAR, plidepassage_label INTEGER, plidepassage_mesh_filename VARCHAR, plidepassage_mesh_label INTEGER, point_number INTEGER NOT NULL, refdepth FLOAT, reflocation STRING, refsize FLOAT, roi_label INTEGER, size FLOAT NOT NULL ) 
CREATE TABLE '_roi' ( eid REFERENCES class( eid ) ON DELETE CASCADE, Tmtktri_filename VARCHAR, Tmtktri_label INTEGER, bucket_filename VARCHAR, custom_num_val FLOAT, gravity_center STRING, graph_index INTEGER, name VARCHAR NOT NULL, point_number INTEGER, roi_filename VARCHAR, roi_label INTEGER, roi_mesh_filename VARCHAR, roi_mesh_label INTEGER, size FLOAT, surface_area FLOAT ) 
CREATE TABLE '_roi_junction' ( eid REFERENCES class( eid ) ON DELETE CASCADE, roi_mesh_junction_filename VARCHAR, roi_mesh_junction_label INTEGER, size FLOAT ) 
CREATE TABLE '_s2g' ( eid REFERENCES class( eid ) ON DELETE CASCADE, type VARCHAR ) 
CREATE TABLE '_scalebloblink' ( eid REFERENCES class( eid ) ON DELETE CASCADE ) 
CREATE TABLE '_ssb' ( eid REFERENCES class( eid ) ON DELETE CASCADE, boundingbox_max STRING, boundingbox_min STRING, gravity_center STRING, graph_index INTEGER, label VARCHAR, label_occur_number INTEGER, lifeTime FLOAT, name VARCHAR, node INTEGER, nodes STRING, rank INTEGER, significance FLOAT, ssb_filename VARCHAR, ssb_label INTEGER, subject VARCHAR, t FLOAT, tValue FLOAT, tmax FLOAT, tmin FLOAT, trep FLOAT ) 
CREATE TABLE '_ssblob' ( eid REFERENCES class( eid ) ON DELETE CASCADE, activation INTEGER, area FLOAT, barycenter STRING, boundingbox_max STRING, boundingbox_min STRING, gravity_center STRING, graph_index INTEGER, label VARCHAR, label_occur_number INTEGER, lifeTime FLOAT, maxContrast FLOAT, maxIntensity FLOAT, meanContrast FLOAT, meanIntensity FLOAT, name VARCHAR, node INTEGER, nodes_list STRING, rank INTEGER, refgravity_center STRING, significance FLOAT, sim_rankperc FLOAT, ssblob_filename VARCHAR, ssblob_label INTEGER, ssblobbucket_filename VARCHAR, ssblobbucket_label INTEGER, t FLOAT, t2 FLOAT, tValue FLOAT, t_rankperc FLOAT, tmax FLOAT, tmin FLOAT, trep FLOAT ) 
CREATE VIEW soma_schemas AS SELECT _soma_schemas.eid AS eid, _soma_schemas.name AS name, _soma_schemas.version AS version FROM _soma_schemas
CREATE VIEW soma_schemas_ AS SELECT _soma_schemas.eid, _soma_schemas.name, _soma_schemas.version FROM _soma_schemas 
CREATE TRIGGER '_insert_soma_schemas' INSTEAD OF INSERT ON 'soma_schemas' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "soma_schemas" );
  INSERT INTO soma_schemas_( eid, name, version ) VALUES ( last_insert_rowid(), NEW.name, NEW.version );
END
CREATE TRIGGER '_insert_soma_schemas_' INSTEAD OF INSERT ON 'soma_schemas_' FOR EACH ROW
BEGIN
  INSERT INTO _soma_schemas( eid, name, version ) VALUES ( NEW.eid, NEW.name, NEW.version );
END
CREATE VIEW soma_classes AS SELECT _soma_classes.eid AS eid, _soma_classes.name AS name, _soma_classes.base AS base FROM _soma_classes
CREATE VIEW soma_classes_ AS SELECT _soma_classes.eid, _soma_classes.name, _soma_classes.base FROM _soma_classes 
CREATE TRIGGER '_insert_soma_classes' INSTEAD OF INSERT ON 'soma_classes' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "soma_classes" );
  INSERT INTO soma_classes_( eid, name, base ) VALUES ( last_insert_rowid(), NEW.name, NEW.base );
END
CREATE TRIGGER '_insert_soma_classes_' INSTEAD OF INSERT ON 'soma_classes_' FOR EACH ROW
BEGIN
  INSERT INTO _soma_classes( eid, name, base ) VALUES ( NEW.eid, NEW.name, NEW.base );
END
CREATE VIEW soma_attributes AS SELECT _soma_attributes.eid AS eid, _soma_attributes.soma_class AS soma_class, _soma_attributes.name AS name, _soma_attributes.type AS type, _soma_attributes.label AS label, _soma_attributes.optional AS optional, _soma_attributes.default_value AS default_value FROM _soma_attributes
CREATE VIEW soma_attributes_ AS SELECT _soma_attributes.eid, _soma_attributes.soma_class, _soma_attributes.name, _soma_attributes.type, _soma_attributes.label, _soma_attributes.optional, _soma_attributes.default_value FROM _soma_attributes 
CREATE TRIGGER '_insert_soma_attributes' INSTEAD OF INSERT ON 'soma_attributes' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "soma_attributes" );
  INSERT INTO soma_attributes_( eid, soma_class, name, type, label, optional, default_value ) VALUES ( last_insert_rowid(), NEW.soma_class, NEW.name, NEW.type, NEW.label, NEW.optional, NEW.default_value );
END
CREATE TRIGGER '_insert_soma_attributes_' INSTEAD OF INSERT ON 'soma_attributes_' FOR EACH ROW
BEGIN
  INSERT INTO _soma_attributes( eid, soma_class, name, type, label, optional, default_value ) VALUES ( NEW.eid, NEW.soma_class, NEW.name, NEW.type, NEW.label, NEW.optional, NEW.default_value );
END
CREATE VIEW Graph AS SELECT _Graph.eid AS eid, _Graph.name AS name, _Graph.side AS side FROM _Graph
CREATE VIEW Graph_ AS SELECT _Graph.eid, _Graph.name, _Graph.side, _BlobsArg.boundingbox_max, _BlobsArg.boundingbox_min, _BlobsArg.datagraph_VERSION, _BlobsArg.datagraph_compatibility_model_VERSION, _BlobsArg.filename_base, _BlobsArg.glb_global_tri, _BlobsArg.glb_tri, _BlobsArg.glb_filename, _BlobsArg.glb_label, _BlobsArg.indiv_graphs, _BlobsArg.latitude, _BlobsArg.latitudes, _BlobsArg.longitude, _BlobsArg.longitudes, _BlobsArg.mesh, _BlobsArg.meshes, _BlobsArg.representation_mesh, _BlobsArg.representation_meshes, _BlobsArg.sujet, _BlobsArg.sujets, _BlobsArg.texture, _BlobsArg.textures, _BlobsArg.type, _BlobsArg.type_bck, _BlobsArg.type_global_bck, _BlobsArg.type_global_tri, _BlobsArg.type_tri, _BlobsArg.voxel_size, _ClusterArg.ClusterArg_VERSION, _ClusterArg.Tal_boundingbox_max, _ClusterArg.Tal_boundingbox_min, _ClusterArg.Talairach_rotation, _ClusterArg.Talairach_scale, _ClusterArg.Talairach_translation, _ClusterArg.Tmtktri_global_tri, _ClusterArg.Tmtktri_filename, _ClusterArg.Tmtktri_label, _ClusterArg.boundingbox_max, _ClusterArg.boundingbox_min, _ClusterArg.bucket_Volume_filename, _ClusterArg.bucket_filename, _ClusterArg.bucket_label, _ClusterArg.cluster_bck, _ClusterArg.cluster_global_bck, _ClusterArg.cluster_global_tri, _ClusterArg.cluster_global_vol, _ClusterArg.cluster_tri, _ClusterArg.cluster_Volume_filename, _ClusterArg.datagraph_VERSION, _ClusterArg.datagraph_compatibility_model_VERSION, _ClusterArg.filename_base, _ClusterArg.label_property, _ClusterArg.maximum_global_tri, _ClusterArg.maxscale, _ClusterArg.mesh_filename_maximum, _ClusterArg.mesh_filename_minimum, _ClusterArg.mesh_filename_minimum2, _ClusterArg.minimum_global_tri, _ClusterArg.minimum2_global_tri, _ClusterArg.minscale, _ClusterArg.origin, _ClusterArg.roi_label_maximum, _ClusterArg.roi_label_minimum, _ClusterArg.roi_label_minimum2, _ClusterArg.scales, _ClusterArg.spm_normalized, _ClusterArg.spm_radio_convention, _ClusterArg.spm_spm2_normalization, _ClusterArg.type_bck, _ClusterArg.type_global_bck, _ClusterArg.type_global_tex, _ClusterArg.type_global_tri, _ClusterArg.type_global_vol, _ClusterArg.type_tex, _ClusterArg.type_tri, _ClusterArg.voxel_size, _CorticalFoldArg.CSF_volume, _CorticalFoldArg.CorticalFoldArg_VERSION, _CorticalFoldArg.GM_filename, _CorticalFoldArg.GM_label, _CorticalFoldArg.GM_volume, _CorticalFoldArg.LCR_filename, _CorticalFoldArg.LCR_label, _CorticalFoldArg.LCR_volume, _CorticalFoldArg.Tal_boundingbox_max, _CorticalFoldArg.Tal_boundingbox_min, _CorticalFoldArg.Talairach_rotation, _CorticalFoldArg.Talairach_scale, _CorticalFoldArg.Talairach_translation, _CorticalFoldArg.Tmtktri_global_tri, _CorticalFoldArg.Tmtktri_tri, _CorticalFoldArg.Tmtktri_filename, _CorticalFoldArg.Tmtktri_label, _CorticalFoldArg.WM_filename, _CorticalFoldArg.WM_label, _CorticalFoldArg.anterior_commissure, _CorticalFoldArg.bottom_bck, _CorticalFoldArg.bottom_global_bck, _CorticalFoldArg.bottom_filename, _CorticalFoldArg.bottom_label, _CorticalFoldArg.bottom_mesh_filename, _CorticalFoldArg.bottom_mesh_label, _CorticalFoldArg.bottom_volume_filename, _CorticalFoldArg.boundingbox_max, _CorticalFoldArg.boundingbox_min, _CorticalFoldArg.brain_hull_area, _CorticalFoldArg.brain_hull_volume, _CorticalFoldArg.cortexHemi_filename, _CorticalFoldArg.cortexHemi_label, _CorticalFoldArg.cortexWhite_filename, _CorticalFoldArg.cortexWhite_label, _CorticalFoldArg.cortical_bck, _CorticalFoldArg.cortical_global_bck, _CorticalFoldArg.cortical_global_vol, _CorticalFoldArg.cortical_Volume_filename, _CorticalFoldArg.cortical_filename, _CorticalFoldArg.cortical_label, _CorticalFoldArg.cortical_mesh_filename, _CorticalFoldArg.cortical_mesh_label, _CorticalFoldArg.custom_num_val, _CorticalFoldArg.datagraph_VERSION, _CorticalFoldArg.datagraph_compatibility_model_VERSION, _CorticalFoldArg.filename_base, _CorticalFoldArg.flipped_hemispheres, _CorticalFoldArg.fold_bck, _CorticalFoldArg.fold_global_bck, _CorticalFoldArg.fold_global_tri, _CorticalFoldArg.fold_global_vol, _CorticalFoldArg.fold_tri, _CorticalFoldArg.folds_area, _CorticalFoldArg.hull_junction_bck, _CorticalFoldArg.hull_junction_global_bck, _CorticalFoldArg.hull_junction_global_vol, _CorticalFoldArg.hull_junction_Volume_filename, _CorticalFoldArg.hull_junction_filename, _CorticalFoldArg.hull_junction_label, _CorticalFoldArg.interhemi_point, _CorticalFoldArg.junction_bck, _CorticalFoldArg.junction_global_bck, _CorticalFoldArg.junction_global_vol, _CorticalFoldArg.junction_Volume_filename, _CorticalFoldArg.junction_filename, _CorticalFoldArg.junction_label, _CorticalFoldArg.junction_mesh_filename, _CorticalFoldArg.junction_mesh_label, _CorticalFoldArg.label_property, _CorticalFoldArg.oldtri_filename, _CorticalFoldArg.oldtri_label, _CorticalFoldArg.origin, _CorticalFoldArg.other_bck, _CorticalFoldArg.other_global_bck, _CorticalFoldArg.other_Volume_filename, _CorticalFoldArg.other_filename, _CorticalFoldArg.other_label, _CorticalFoldArg.other_mesh_filename, _CorticalFoldArg.other_mesh_label, _CorticalFoldArg.plidepassage_bck, _CorticalFoldArg.plidepassage_global_bck, _CorticalFoldArg.plidepassage_Volume_filename, _CorticalFoldArg.plidepassage_filename, _CorticalFoldArg.plidepassage_label, _CorticalFoldArg.plidepassage_mesh_filename, _CorticalFoldArg.plidepassage_mesh_label, _CorticalFoldArg.posterior_commissure, _CorticalFoldArg.refbrain_hull_area, _CorticalFoldArg.refbrain_hull_volume, _CorticalFoldArg.reffolds_area, _CorticalFoldArg.reftotal_sulci_length, _CorticalFoldArg.spm_normalized, _CorticalFoldArg.spm_radio_convention, _CorticalFoldArg.spm_spm2_normalization, _CorticalFoldArg.ss_bck, _CorticalFoldArg.ss_global_bck, _CorticalFoldArg.ss_Volume_filename, _CorticalFoldArg.ss_filename, _CorticalFoldArg.ss_label, _CorticalFoldArg.ss_mesh_filename, _CorticalFoldArg.ss_mesh_label, _CorticalFoldArg.thickness_mean, _CorticalFoldArg.thickness_std, _CorticalFoldArg.total_sulci_length, _CorticalFoldArg.type_bck, _CorticalFoldArg.type_global_bck, _CorticalFoldArg.type_global_tex, _CorticalFoldArg.type_global_tri, _CorticalFoldArg.type_global_vol, _CorticalFoldArg.type_tex, _CorticalFoldArg.type_tri, _CorticalFoldArg.voxel_size, _NucleusArg.NucleusArg_VERSION, _NucleusArg.Tmtktri_global_bck, _NucleusArg.Tmtktri_filename, _NucleusArg.Tmtktri_label, _NucleusArg.boundingbox_max, _NucleusArg.boundingbox_min, _NucleusArg.bucket_bck, _NucleusArg.bucket_global_bck, _NucleusArg.bucket_global_tri, _NucleusArg.bucket_global_vol, _NucleusArg.bucket_tri, _NucleusArg.bucket_filename, _NucleusArg.bucket_label, _NucleusArg.datagraph_VERSION, _NucleusArg.datagraph_compatibility_model_VERSION, _NucleusArg.filename_base, _NucleusArg.label_property, _NucleusArg.nucleus_bck, _NucleusArg.nucleus_global_bck, _NucleusArg.nucleus_global_tri, _NucleusArg.nucleus_global_vol, _NucleusArg.nucleus_tri, _NucleusArg.origin, _NucleusArg.roi_bck, _NucleusArg.roi_global_bck, _NucleusArg.roi_global_tri, _NucleusArg.roi_global_vol, _NucleusArg.roi_tri, _NucleusArg.spm_normalized, _NucleusArg.spm_radio_convention, _NucleusArg.spm_spm2_normalization, _NucleusArg.type_bck, _NucleusArg.type_global_bck, _NucleusArg.type_global_tri, _NucleusArg.type_global_vol, _NucleusArg.type_tri, _NucleusArg.voxel_size, _PrimalSketchArg.blob_filename, _PrimalSketchArg.boundingbox_max, _PrimalSketchArg.boundingbox_min, _PrimalSketchArg.datagraph_VERSION, _PrimalSketchArg.datagraph_compatibility_model_VERSION, _PrimalSketchArg.filename_base, _PrimalSketchArg.label_property, _PrimalSketchArg.ssblob_bck, _PrimalSketchArg.ssblob_global_bck, _PrimalSketchArg.ssblob_global_tri, _PrimalSketchArg.ssblob_tri, _PrimalSketchArg.sujet, _PrimalSketchArg.type, _PrimalSketchArg.type_bck, _PrimalSketchArg.type_global_bck, _PrimalSketchArg.type_global_tri, _PrimalSketchArg.type_tri, _PrimalSketchArg.voxel_size, _RoiArg.RoiArg_VERSION, _RoiArg.Tmtktri_filename, _RoiArg.anterior_commissure, _RoiArg.boundingbox_max, _RoiArg.boundingbox_min, _RoiArg.bucket_filename, _RoiArg.datagraph_VERSION, _RoiArg.datagraph_compatibility_model_VERSION, _RoiArg.filename_base, _RoiArg.interhemi_point, _RoiArg.label_property, _RoiArg.origin, _RoiArg.posterior_commissure, _RoiArg.roi_bck, _RoiArg.roi_global_bck, _RoiArg.roi_global_tri, _RoiArg.roi_global_vol, _RoiArg.roi_tri, _RoiArg.roi_Volume_filename, _RoiArg.roi_junction_global_tri, _RoiArg.roi_junction_tri, _RoiArg.roi_mesh_filename, _RoiArg.roi_mesh_junction_filename, _RoiArg.roi_mesh_junction_label, _RoiArg.roi_mesh_label, _RoiArg.spm_normalized, _RoiArg.spm_radio_convention, _RoiArg.spm_spm2_normalization, _RoiArg.type_bck, _RoiArg.type_global_bck, _RoiArg.type_global_tri, _RoiArg.type_global_vol, _RoiArg.type_tri, _RoiArg.voxel_size, _graphe_sillon.Tal_boundingbox_max, _graphe_sillon.Tal_boundingbox_min, _graphe_sillon.Talairach_rotation, _graphe_sillon.Talairach_scale, _graphe_sillon.Talairach_translation, _graphe_sillon.Tmtktri_filename, _graphe_sillon.anterior_commissure, _graphe_sillon.bottom_filename, _graphe_sillon.boundingbox_max, _graphe_sillon.boundingbox_min, _graphe_sillon.cortical_bck, _graphe_sillon.cortical_global_bck, _graphe_sillon.filename_base, _graphe_sillon.fold_bck, _graphe_sillon.fold_tri, _graphe_sillon.gravity_center, _graphe_sillon.hull_junction_bck, _graphe_sillon.interhemi_point, _graphe_sillon.junction_bck, _graphe_sillon.oldtri_filename, _graphe_sillon.other_filename, _graphe_sillon.plidepassage_bck, _graphe_sillon.posterior_commissure, _graphe_sillon.roi_label, _graphe_sillon.ss_filename, _graphe_sillon.type_bck, _graphe_sillon.type_tri, _graphe_sillon.voxel_size, _model_graph.Tmtktri_filename, _model_graph.default_model_file, _model_graph.default_nomenclature, _model_graph.default_selector, _model_graph.filename_base, _model_graph.fold_tri, _model_graph.label_list, _model_graph.model_VERSION, _model_graph.model_compatibility_data_VERSION, _model_graph.model_file, _model_graph.model_finder, _model_graph.nbase_graphs, _model_graph.type_tri, _model_graph.void_label FROM _Graph LEFT JOIN _BlobsArg ON _Graph.eid=_BlobsArg.eid LEFT JOIN _ClusterArg ON _Graph.eid=_ClusterArg.eid LEFT JOIN _CorticalFoldArg ON _Graph.eid=_CorticalFoldArg.eid LEFT JOIN _NucleusArg ON _Graph.eid=_NucleusArg.eid LEFT JOIN _PrimalSketchArg ON _Graph.eid=_PrimalSketchArg.eid LEFT JOIN _RoiArg ON _Graph.eid=_RoiArg.eid LEFT JOIN _graphe_sillon ON _Graph.eid=_graphe_sillon.eid LEFT JOIN _model_graph ON _Graph.eid=_model_graph.eid
CREATE TRIGGER '_insert_Graph' INSTEAD OF INSERT ON 'Graph' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "Graph" );
  INSERT INTO Graph_( eid, name, side ) VALUES ( last_insert_rowid(), NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_Graph_' INSTEAD OF INSERT ON 'Graph_' FOR EACH ROW
BEGIN
  INSERT INTO _Graph( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW Vertex AS SELECT _Vertex.eid AS eid, _Vertex.graph AS graph FROM _Vertex
CREATE VIEW Vertex_ AS SELECT _Vertex.eid, _Vertex.graph, _cluster.Talairach_par_mm_endpar_, _cluster.Tmtktri_filename, _cluster.Tmtktri_label, _cluster.apparitionflag, _cluster.blob_saddle_type, _cluster.bucket_filename, _cluster.bucket_label, _cluster.cluster_filename, _cluster.cluster_label, _cluster.custom_num_val, _cluster.gravity_center, _cluster.gray_level_blobs, _cluster.graph_index, _cluster.jamflag_down, _cluster.jamflag_up, _cluster.label, _cluster.lifetime, _cluster.maximum, _cluster.maximum_filename, _cluster.maximum_label, _cluster.maximum_position, _cluster.maxscale, _cluster.mesh_filename_maximum, _cluster.mesh_filename_minimum, _cluster.mesh_filename_minimum2, _cluster.minimum, _cluster.minimum2_filename, _cluster.minimum2_label, _cluster.minimum_filename, _cluster.minimum_label, _cluster.minimum_position, _cluster.minscale, _cluster.name, _cluster.point_number, _cluster.roi_label, _cluster.roi_label_maximum, _cluster.roi_label_minimum, _cluster.roi_label_minimum2, _cluster.scale, _cluster.size, _cluster.surface, _cluster.volume, _cluster.wflag_down, _cluster.wflag_up, _fold.CSF_volume, _fold.GM_filename, _fold.GM_label, _fold.GM_volume, _fold.LCR_filename, _fold.LCR_label, _fold.LCR_volume, _fold.Tal_boundingbox_max, _fold.Tal_boundingbox_min, _fold.Tmtktri_filename, _fold.Tmtktri_label, _fold.WM_filename, _fold.WM_label, _fold.bottom_filename, _fold.bottom_label, _fold.bottom_mesh_filename, _fold.bottom_mesh_label, _fold.bottom_point_number, _fold.boundingbox_max, _fold.boundingbox_min, _fold.cortexHemi_filename, _fold.cortexHemi_label, _fold.cortexWhite_filename, _fold.cortexWhite_label, _fold.custom_num_val, _fold.depth_direction, _fold.depth_direction_weight, _fold.direction, _fold.gravity_center, _fold.grey_surface_area, _fold.hull_normal, _fold.hull_normal_weight, _fold.graph_index, _fold.label, _fold.maxdepth, _fold.mean_depth, _fold.mid_interface_voxels, _fold.mindepth, _fold.moments, _fold.name, _fold.normal, _fold.oldtri_filename, _fold.oldtri_label, _fold.other_filename, _fold.other_label, _fold.other_mesh_filename, _fold.other_mesh_label, _fold.other_point_number, _fold.point_number, _fold.refdepth_direction, _fold.refdirection, _fold.refgravity_center, _fold.refhull_normal, _fold.refmaxdepth, _fold.refmean_depth, _fold.refmindepth, _fold.refmoments, _fold.refnormal, _fold.refsize, _fold.refsurface_area, _fold.rootsbassin, _fold.size, _fold.skeleton_label, _fold.ss_filename, _fold.ss_label, _fold.ss_mesh_filename, _fold.ss_mesh_label, _fold.ss_point_number, _fold.surface_area, _fold.talcovar, _fold.thickness_mean, _fold.thickness_std, _fold.used_labels, _fold.white_surface_area, _fold_name.color, _fold_name.label, _fold_name.name, _glb.boundingbox_max, _glb.boundingbox_min, _glb.glb_filename, _glb.glb_label, _glb.graph_index, _glb.nodes, _glb.scale, _glb.t, _glb.tValue, _hierarchy.graph_syntax, _hull.graph_index, _hull.name, _hull.point_number, _hull.size, _hull.skeleton_label, _model_node.Tmtktri_filename, _model_node.domain_file, _model_node.label, _model_node.model_file, _model_node.noinstance_count, _model_node.occurence_count, _nucleus.Tmtktri_filename, _nucleus.Tmtktri_label, _nucleus.bucket_filename, _nucleus.bucket_label, _nucleus.graph_index, _nucleus.name, _nucleus.point_number, _nucleus.roi_label, _nucleus.size, _roi.Tmtktri_filename, _roi.Tmtktri_label, _roi.bucket_filename, _roi.custom_num_val, _roi.gravity_center, _roi.graph_index, _roi.name, _roi.point_number, _roi.roi_filename, _roi.roi_label, _roi.roi_mesh_filename, _roi.roi_mesh_label, _roi.size, _roi.surface_area, _ssb.boundingbox_max, _ssb.boundingbox_min, _ssb.gravity_center, _ssb.graph_index, _ssb.label, _ssb.label_occur_number, _ssb.lifeTime, _ssb.name, _ssb.node, _ssb.nodes, _ssb.rank, _ssb.significance, _ssb.ssb_filename, _ssb.ssb_label, _ssb.subject, _ssb.t, _ssb.tValue, _ssb.tmax, _ssb.tmin, _ssb.trep, _ssblob.activation, _ssblob.area, _ssblob.barycenter, _ssblob.boundingbox_max, _ssblob.boundingbox_min, _ssblob.gravity_center, _ssblob.graph_index, _ssblob.label, _ssblob.label_occur_number, _ssblob.lifeTime, _ssblob.maxContrast, _ssblob.maxIntensity, _ssblob.meanContrast, _ssblob.meanIntensity, _ssblob.name, _ssblob.node, _ssblob.nodes_list, _ssblob.rank, _ssblob.refgravity_center, _ssblob.significance, _ssblob.sim_rankperc, _ssblob.ssblob_filename, _ssblob.ssblob_label, _ssblob.ssblobbucket_filename, _ssblob.ssblobbucket_label, _ssblob.t, _ssblob.t2, _ssblob.tValue, _ssblob.t_rankperc, _ssblob.tmax, _ssblob.tmin, _ssblob.trep FROM _Vertex LEFT JOIN _cluster ON _Vertex.eid=_cluster.eid LEFT JOIN _fold ON _Vertex.eid=_fold.eid LEFT JOIN _fold_name ON _Vertex.eid=_fold_name.eid LEFT JOIN _glb ON _Vertex.eid=_glb.eid LEFT JOIN _hierarchy ON _Vertex.eid=_hierarchy.eid LEFT JOIN _hull ON _Vertex.eid=_hull.eid LEFT JOIN _model_node ON _Vertex.eid=_model_node.eid LEFT JOIN _nucleus ON _Vertex.eid=_nucleus.eid LEFT JOIN _roi ON _Vertex.eid=_roi.eid LEFT JOIN _ssb ON _Vertex.eid=_ssb.eid LEFT JOIN _ssblob ON _Vertex.eid=_ssblob.eid
CREATE TRIGGER '_insert_Vertex' INSTEAD OF INSERT ON 'Vertex' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "Vertex" );
  INSERT INTO Vertex_( eid, graph ) VALUES ( last_insert_rowid(), NEW.graph );
END
CREATE TRIGGER '_insert_Vertex_' INSTEAD OF INSERT ON 'Vertex_' FOR EACH ROW
BEGIN
  INSERT INTO _Vertex( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW Edge AS SELECT _Edge.eid AS eid, _Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _Edge
CREATE VIEW Edge_ AS SELECT _Edge.eid, _Edge.vertex1, _Edge.vertex2, _b2b.similarity, _b2b.type, _bifurcation.blob_down, _bifurcation.blob_up, _bifurcation.type, _cortical.SS1nearest, _cortical.SS2nearest, _cortical.cortical_filename, _cortical.cortical_label, _cortical.cortical_mesh_filename, _cortical.cortical_mesh_label, _cortical.dist, _cortical.length, _cortical.point_number, _cortical.refSS1nearest, _cortical.refSS2nearest, _cortical.refdist, _cortical.reflength, _cortical.refmean_connected_dir, _cortical.refmean_connected_dist, _cortical.refsize, _cortical.refstd_connected_dist, _cortical.roi_label, _cortical.size, _hull_junction.direction, _hull_junction.extremity1, _hull_junction.extremity2, _hull_junction.junction_filename, _hull_junction.junction_label, _hull_junction.junction_mesh_filename, _hull_junction.junction_mesh_label, _hull_junction.length, _hull_junction.point_number, _hull_junction.refdirection, _hull_junction.refextremity1, _hull_junction.refextremity2, _hull_junction.reflength, _hull_junction.refsize, _hull_junction.size, _junction.direction, _junction.extremity1, _junction.extremity2, _junction.junction_filename, _junction.junction_label, _junction.junction_mesh_filename, _junction.junction_mesh_label, _junction.length, _junction.maxdepth, _junction.mindepth, _junction.point_number, _junction.refdirection, _junction.refextremity1, _junction.refextremity2, _junction.reflength, _junction.refmaxdepth, _junction.refmindepth, _junction.refsize, _junction.roi_label, _junction.size, _model_edge.label1, _model_edge.label2, _model_edge.model_file, _model_edge.noinstance_count, _model_edge.occurence_count, _plidepassage.depth, _plidepassage.location, _plidepassage.plidepassage_filename, _plidepassage.plidepassage_label, _plidepassage.plidepassage_mesh_filename, _plidepassage.plidepassage_mesh_label, _plidepassage.point_number, _plidepassage.refdepth, _plidepassage.reflocation, _plidepassage.refsize, _plidepassage.roi_label, _plidepassage.size, _roi_junction.roi_mesh_junction_filename, _roi_junction.roi_mesh_junction_label, _roi_junction.size, _s2g.type FROM _Edge LEFT JOIN _b2b ON _Edge.eid=_b2b.eid LEFT JOIN _bifurcation ON _Edge.eid=_bifurcation.eid LEFT JOIN _blob_saddle_link ON _Edge.eid=_blob_saddle_link.eid LEFT JOIN _cortical ON _Edge.eid=_cortical.eid LEFT JOIN _hull_junction ON _Edge.eid=_hull_junction.eid LEFT JOIN _junction ON _Edge.eid=_junction.eid LEFT JOIN _model_edge ON _Edge.eid=_model_edge.eid LEFT JOIN _plidepassage ON _Edge.eid=_plidepassage.eid LEFT JOIN _roi_junction ON _Edge.eid=_roi_junction.eid LEFT JOIN _s2g ON _Edge.eid=_s2g.eid LEFT JOIN _scalebloblink ON _Edge.eid=_scalebloblink.eid
CREATE TRIGGER '_insert_Edge' INSTEAD OF INSERT ON 'Edge' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "Edge" );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_Edge_' INSTEAD OF INSERT ON 'Edge_' FOR EACH ROW
BEGIN
  INSERT INTO _Edge( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW BlobsArg AS SELECT _BlobsArg.eid AS eid, _BlobsArg.boundingbox_max AS boundingbox_max, _BlobsArg.boundingbox_min AS boundingbox_min, _BlobsArg.datagraph_VERSION AS datagraph_VERSION, _BlobsArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _BlobsArg.filename_base AS filename_base, _BlobsArg.glb_global_tri AS glb_global_tri, _BlobsArg.glb_tri AS glb_tri, _BlobsArg.glb_filename AS glb_filename, _BlobsArg.glb_label AS glb_label, _BlobsArg.indiv_graphs AS indiv_graphs, _BlobsArg.latitude AS latitude, _BlobsArg.latitudes AS latitudes, _BlobsArg.longitude AS longitude, _BlobsArg.longitudes AS longitudes, _BlobsArg.mesh AS mesh, _BlobsArg.meshes AS meshes, _BlobsArg.representation_mesh AS representation_mesh, _BlobsArg.representation_meshes AS representation_meshes, _BlobsArg.sujet AS sujet, _BlobsArg.sujets AS sujets, _BlobsArg.texture AS texture, _BlobsArg.textures AS textures, _BlobsArg.type AS type, _BlobsArg.type_bck AS type_bck, _BlobsArg.type_global_bck AS type_global_bck, _BlobsArg.type_global_tri AS type_global_tri, _BlobsArg.type_tri AS type_tri, _BlobsArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _BlobsArg, _Graph WHERE _BlobsArg.eid=_Graph.eid
CREATE VIEW BlobsArg_ AS SELECT _BlobsArg.eid, _BlobsArg.boundingbox_max, _BlobsArg.boundingbox_min, _BlobsArg.datagraph_VERSION, _BlobsArg.datagraph_compatibility_model_VERSION, _BlobsArg.filename_base, _BlobsArg.glb_global_tri, _BlobsArg.glb_tri, _BlobsArg.glb_filename, _BlobsArg.glb_label, _BlobsArg.indiv_graphs, _BlobsArg.latitude, _BlobsArg.latitudes, _BlobsArg.longitude, _BlobsArg.longitudes, _BlobsArg.mesh, _BlobsArg.meshes, _BlobsArg.representation_mesh, _BlobsArg.representation_meshes, _BlobsArg.sujet, _BlobsArg.sujets, _BlobsArg.texture, _BlobsArg.textures, _BlobsArg.type, _BlobsArg.type_bck, _BlobsArg.type_global_bck, _BlobsArg.type_global_tri, _BlobsArg.type_tri, _BlobsArg.voxel_size, _Graph.name, _Graph.side FROM _BlobsArg LEFT JOIN _Graph ON _BlobsArg.eid=_Graph.eid
CREATE TRIGGER '_insert_BlobsArg' INSTEAD OF INSERT ON 'BlobsArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "BlobsArg" );
  INSERT INTO BlobsArg_( eid, boundingbox_max, boundingbox_min, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, glb_global_tri, glb_tri, glb_filename, glb_label, indiv_graphs, latitude, latitudes, longitude, longitudes, mesh, meshes, representation_mesh, representation_meshes, sujet, sujets, texture, textures, type, type_bck, type_global_bck, type_global_tri, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.boundingbox_max, NEW.boundingbox_min, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.glb_global_tri, NEW.glb_tri, NEW.glb_filename, NEW.glb_label, NEW.indiv_graphs, NEW.latitude, NEW.latitudes, NEW.longitude, NEW.longitudes, NEW.mesh, NEW.meshes, NEW.representation_mesh, NEW.representation_meshes, NEW.sujet, NEW.sujets, NEW.texture, NEW.textures, NEW.type, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_BlobsArg_' INSTEAD OF INSERT ON 'BlobsArg_' FOR EACH ROW
BEGIN
  INSERT INTO _BlobsArg( eid, boundingbox_max, boundingbox_min, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, glb_global_tri, glb_tri, glb_filename, glb_label, indiv_graphs, latitude, latitudes, longitude, longitudes, mesh, meshes, representation_mesh, representation_meshes, sujet, sujets, texture, textures, type, type_bck, type_global_bck, type_global_tri, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.boundingbox_max, NEW.boundingbox_min, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.glb_global_tri, NEW.glb_tri, NEW.glb_filename, NEW.glb_label, NEW.indiv_graphs, NEW.latitude, NEW.latitudes, NEW.longitude, NEW.longitudes, NEW.mesh, NEW.meshes, NEW.representation_mesh, NEW.representation_meshes, NEW.sujet, NEW.sujets, NEW.texture, NEW.textures, NEW.type, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW ClusterArg AS SELECT _ClusterArg.eid AS eid, _ClusterArg.ClusterArg_VERSION AS ClusterArg_VERSION, _ClusterArg.Tal_boundingbox_max AS Tal_boundingbox_max, _ClusterArg.Tal_boundingbox_min AS Tal_boundingbox_min, _ClusterArg.Talairach_rotation AS Talairach_rotation, _ClusterArg.Talairach_scale AS Talairach_scale, _ClusterArg.Talairach_translation AS Talairach_translation, _ClusterArg.Tmtktri_global_tri AS Tmtktri_global_tri, _ClusterArg.Tmtktri_filename AS Tmtktri_filename, _ClusterArg.Tmtktri_label AS Tmtktri_label, _ClusterArg.boundingbox_max AS boundingbox_max, _ClusterArg.boundingbox_min AS boundingbox_min, _ClusterArg.bucket_Volume_filename AS bucket_Volume_filename, _ClusterArg.bucket_filename AS bucket_filename, _ClusterArg.bucket_label AS bucket_label, _ClusterArg.cluster_bck AS cluster_bck, _ClusterArg.cluster_global_bck AS cluster_global_bck, _ClusterArg.cluster_global_tri AS cluster_global_tri, _ClusterArg.cluster_global_vol AS cluster_global_vol, _ClusterArg.cluster_tri AS cluster_tri, _ClusterArg.cluster_Volume_filename AS cluster_Volume_filename, _ClusterArg.datagraph_VERSION AS datagraph_VERSION, _ClusterArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _ClusterArg.filename_base AS filename_base, _ClusterArg.label_property AS label_property, _ClusterArg.maximum_global_tri AS maximum_global_tri, _ClusterArg.maxscale AS maxscale, _ClusterArg.mesh_filename_maximum AS mesh_filename_maximum, _ClusterArg.mesh_filename_minimum AS mesh_filename_minimum, _ClusterArg.mesh_filename_minimum2 AS mesh_filename_minimum2, _ClusterArg.minimum_global_tri AS minimum_global_tri, _ClusterArg.minimum2_global_tri AS minimum2_global_tri, _ClusterArg.minscale AS minscale, _ClusterArg.origin AS origin, _ClusterArg.roi_label_maximum AS roi_label_maximum, _ClusterArg.roi_label_minimum AS roi_label_minimum, _ClusterArg.roi_label_minimum2 AS roi_label_minimum2, _ClusterArg.scales AS scales, _ClusterArg.spm_normalized AS spm_normalized, _ClusterArg.spm_radio_convention AS spm_radio_convention, _ClusterArg.spm_spm2_normalization AS spm_spm2_normalization, _ClusterArg.type_bck AS type_bck, _ClusterArg.type_global_bck AS type_global_bck, _ClusterArg.type_global_tex AS type_global_tex, _ClusterArg.type_global_tri AS type_global_tri, _ClusterArg.type_global_vol AS type_global_vol, _ClusterArg.type_tex AS type_tex, _ClusterArg.type_tri AS type_tri, _ClusterArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _ClusterArg, _Graph WHERE _ClusterArg.eid=_Graph.eid
CREATE VIEW ClusterArg_ AS SELECT _ClusterArg.eid, _ClusterArg.ClusterArg_VERSION, _ClusterArg.Tal_boundingbox_max, _ClusterArg.Tal_boundingbox_min, _ClusterArg.Talairach_rotation, _ClusterArg.Talairach_scale, _ClusterArg.Talairach_translation, _ClusterArg.Tmtktri_global_tri, _ClusterArg.Tmtktri_filename, _ClusterArg.Tmtktri_label, _ClusterArg.boundingbox_max, _ClusterArg.boundingbox_min, _ClusterArg.bucket_Volume_filename, _ClusterArg.bucket_filename, _ClusterArg.bucket_label, _ClusterArg.cluster_bck, _ClusterArg.cluster_global_bck, _ClusterArg.cluster_global_tri, _ClusterArg.cluster_global_vol, _ClusterArg.cluster_tri, _ClusterArg.cluster_Volume_filename, _ClusterArg.datagraph_VERSION, _ClusterArg.datagraph_compatibility_model_VERSION, _ClusterArg.filename_base, _ClusterArg.label_property, _ClusterArg.maximum_global_tri, _ClusterArg.maxscale, _ClusterArg.mesh_filename_maximum, _ClusterArg.mesh_filename_minimum, _ClusterArg.mesh_filename_minimum2, _ClusterArg.minimum_global_tri, _ClusterArg.minimum2_global_tri, _ClusterArg.minscale, _ClusterArg.origin, _ClusterArg.roi_label_maximum, _ClusterArg.roi_label_minimum, _ClusterArg.roi_label_minimum2, _ClusterArg.scales, _ClusterArg.spm_normalized, _ClusterArg.spm_radio_convention, _ClusterArg.spm_spm2_normalization, _ClusterArg.type_bck, _ClusterArg.type_global_bck, _ClusterArg.type_global_tex, _ClusterArg.type_global_tri, _ClusterArg.type_global_vol, _ClusterArg.type_tex, _ClusterArg.type_tri, _ClusterArg.voxel_size, _Graph.name, _Graph.side FROM _ClusterArg LEFT JOIN _Graph ON _ClusterArg.eid=_Graph.eid
CREATE TRIGGER '_insert_ClusterArg' INSTEAD OF INSERT ON 'ClusterArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "ClusterArg" );
  INSERT INTO ClusterArg_( eid, ClusterArg_VERSION, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_global_tri, Tmtktri_filename, Tmtktri_label, boundingbox_max, boundingbox_min, bucket_Volume_filename, bucket_filename, bucket_label, cluster_bck, cluster_global_bck, cluster_global_tri, cluster_global_vol, cluster_tri, cluster_Volume_filename, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, maximum_global_tri, maxscale, mesh_filename_maximum, mesh_filename_minimum, mesh_filename_minimum2, minimum_global_tri, minimum2_global_tri, minscale, origin, roi_label_maximum, roi_label_minimum, roi_label_minimum2, scales, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tex, type_global_tri, type_global_vol, type_tex, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.ClusterArg_VERSION, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_global_tri, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_Volume_filename, NEW.bucket_filename, NEW.bucket_label, NEW.cluster_bck, NEW.cluster_global_bck, NEW.cluster_global_tri, NEW.cluster_global_vol, NEW.cluster_tri, NEW.cluster_Volume_filename, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.maximum_global_tri, NEW.maxscale, NEW.mesh_filename_maximum, NEW.mesh_filename_minimum, NEW.mesh_filename_minimum2, NEW.minimum_global_tri, NEW.minimum2_global_tri, NEW.minscale, NEW.origin, NEW.roi_label_maximum, NEW.roi_label_minimum, NEW.roi_label_minimum2, NEW.scales, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tex, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tex, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_ClusterArg_' INSTEAD OF INSERT ON 'ClusterArg_' FOR EACH ROW
BEGIN
  INSERT INTO _ClusterArg( eid, ClusterArg_VERSION, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_global_tri, Tmtktri_filename, Tmtktri_label, boundingbox_max, boundingbox_min, bucket_Volume_filename, bucket_filename, bucket_label, cluster_bck, cluster_global_bck, cluster_global_tri, cluster_global_vol, cluster_tri, cluster_Volume_filename, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, maximum_global_tri, maxscale, mesh_filename_maximum, mesh_filename_minimum, mesh_filename_minimum2, minimum_global_tri, minimum2_global_tri, minscale, origin, roi_label_maximum, roi_label_minimum, roi_label_minimum2, scales, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tex, type_global_tri, type_global_vol, type_tex, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.ClusterArg_VERSION, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_global_tri, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_Volume_filename, NEW.bucket_filename, NEW.bucket_label, NEW.cluster_bck, NEW.cluster_global_bck, NEW.cluster_global_tri, NEW.cluster_global_vol, NEW.cluster_tri, NEW.cluster_Volume_filename, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.maximum_global_tri, NEW.maxscale, NEW.mesh_filename_maximum, NEW.mesh_filename_minimum, NEW.mesh_filename_minimum2, NEW.minimum_global_tri, NEW.minimum2_global_tri, NEW.minscale, NEW.origin, NEW.roi_label_maximum, NEW.roi_label_minimum, NEW.roi_label_minimum2, NEW.scales, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tex, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tex, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW CorticalFoldArg AS SELECT _CorticalFoldArg.eid AS eid, _CorticalFoldArg.CSF_volume AS CSF_volume, _CorticalFoldArg.CorticalFoldArg_VERSION AS CorticalFoldArg_VERSION, _CorticalFoldArg.GM_filename AS GM_filename, _CorticalFoldArg.GM_label AS GM_label, _CorticalFoldArg.GM_volume AS GM_volume, _CorticalFoldArg.LCR_filename AS LCR_filename, _CorticalFoldArg.LCR_label AS LCR_label, _CorticalFoldArg.LCR_volume AS LCR_volume, _CorticalFoldArg.Tal_boundingbox_max AS Tal_boundingbox_max, _CorticalFoldArg.Tal_boundingbox_min AS Tal_boundingbox_min, _CorticalFoldArg.Talairach_rotation AS Talairach_rotation, _CorticalFoldArg.Talairach_scale AS Talairach_scale, _CorticalFoldArg.Talairach_translation AS Talairach_translation, _CorticalFoldArg.Tmtktri_global_tri AS Tmtktri_global_tri, _CorticalFoldArg.Tmtktri_tri AS Tmtktri_tri, _CorticalFoldArg.Tmtktri_filename AS Tmtktri_filename, _CorticalFoldArg.Tmtktri_label AS Tmtktri_label, _CorticalFoldArg.WM_filename AS WM_filename, _CorticalFoldArg.WM_label AS WM_label, _CorticalFoldArg.anterior_commissure AS anterior_commissure, _CorticalFoldArg.bottom_bck AS bottom_bck, _CorticalFoldArg.bottom_global_bck AS bottom_global_bck, _CorticalFoldArg.bottom_filename AS bottom_filename, _CorticalFoldArg.bottom_label AS bottom_label, _CorticalFoldArg.bottom_mesh_filename AS bottom_mesh_filename, _CorticalFoldArg.bottom_mesh_label AS bottom_mesh_label, _CorticalFoldArg.bottom_volume_filename AS bottom_volume_filename, _CorticalFoldArg.boundingbox_max AS boundingbox_max, _CorticalFoldArg.boundingbox_min AS boundingbox_min, _CorticalFoldArg.brain_hull_area AS brain_hull_area, _CorticalFoldArg.brain_hull_volume AS brain_hull_volume, _CorticalFoldArg.cortexHemi_filename AS cortexHemi_filename, _CorticalFoldArg.cortexHemi_label AS cortexHemi_label, _CorticalFoldArg.cortexWhite_filename AS cortexWhite_filename, _CorticalFoldArg.cortexWhite_label AS cortexWhite_label, _CorticalFoldArg.cortical_bck AS cortical_bck, _CorticalFoldArg.cortical_global_bck AS cortical_global_bck, _CorticalFoldArg.cortical_global_vol AS cortical_global_vol, _CorticalFoldArg.cortical_Volume_filename AS cortical_Volume_filename, _CorticalFoldArg.cortical_filename AS cortical_filename, _CorticalFoldArg.cortical_label AS cortical_label, _CorticalFoldArg.cortical_mesh_filename AS cortical_mesh_filename, _CorticalFoldArg.cortical_mesh_label AS cortical_mesh_label, _CorticalFoldArg.custom_num_val AS custom_num_val, _CorticalFoldArg.datagraph_VERSION AS datagraph_VERSION, _CorticalFoldArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _CorticalFoldArg.filename_base AS filename_base, _CorticalFoldArg.flipped_hemispheres AS flipped_hemispheres, _CorticalFoldArg.fold_bck AS fold_bck, _CorticalFoldArg.fold_global_bck AS fold_global_bck, _CorticalFoldArg.fold_global_tri AS fold_global_tri, _CorticalFoldArg.fold_global_vol AS fold_global_vol, _CorticalFoldArg.fold_tri AS fold_tri, _CorticalFoldArg.folds_area AS folds_area, _CorticalFoldArg.hull_junction_bck AS hull_junction_bck, _CorticalFoldArg.hull_junction_global_bck AS hull_junction_global_bck, _CorticalFoldArg.hull_junction_global_vol AS hull_junction_global_vol, _CorticalFoldArg.hull_junction_Volume_filename AS hull_junction_Volume_filename, _CorticalFoldArg.hull_junction_filename AS hull_junction_filename, _CorticalFoldArg.hull_junction_label AS hull_junction_label, _CorticalFoldArg.interhemi_point AS interhemi_point, _CorticalFoldArg.junction_bck AS junction_bck, _CorticalFoldArg.junction_global_bck AS junction_global_bck, _CorticalFoldArg.junction_global_vol AS junction_global_vol, _CorticalFoldArg.junction_Volume_filename AS junction_Volume_filename, _CorticalFoldArg.junction_filename AS junction_filename, _CorticalFoldArg.junction_label AS junction_label, _CorticalFoldArg.junction_mesh_filename AS junction_mesh_filename, _CorticalFoldArg.junction_mesh_label AS junction_mesh_label, _CorticalFoldArg.label_property AS label_property, _CorticalFoldArg.oldtri_filename AS oldtri_filename, _CorticalFoldArg.oldtri_label AS oldtri_label, _CorticalFoldArg.origin AS origin, _CorticalFoldArg.other_bck AS other_bck, _CorticalFoldArg.other_global_bck AS other_global_bck, _CorticalFoldArg.other_Volume_filename AS other_Volume_filename, _CorticalFoldArg.other_filename AS other_filename, _CorticalFoldArg.other_label AS other_label, _CorticalFoldArg.other_mesh_filename AS other_mesh_filename, _CorticalFoldArg.other_mesh_label AS other_mesh_label, _CorticalFoldArg.plidepassage_bck AS plidepassage_bck, _CorticalFoldArg.plidepassage_global_bck AS plidepassage_global_bck, _CorticalFoldArg.plidepassage_Volume_filename AS plidepassage_Volume_filename, _CorticalFoldArg.plidepassage_filename AS plidepassage_filename, _CorticalFoldArg.plidepassage_label AS plidepassage_label, _CorticalFoldArg.plidepassage_mesh_filename AS plidepassage_mesh_filename, _CorticalFoldArg.plidepassage_mesh_label AS plidepassage_mesh_label, _CorticalFoldArg.posterior_commissure AS posterior_commissure, _CorticalFoldArg.refbrain_hull_area AS refbrain_hull_area, _CorticalFoldArg.refbrain_hull_volume AS refbrain_hull_volume, _CorticalFoldArg.reffolds_area AS reffolds_area, _CorticalFoldArg.reftotal_sulci_length AS reftotal_sulci_length, _CorticalFoldArg.spm_normalized AS spm_normalized, _CorticalFoldArg.spm_radio_convention AS spm_radio_convention, _CorticalFoldArg.spm_spm2_normalization AS spm_spm2_normalization, _CorticalFoldArg.ss_bck AS ss_bck, _CorticalFoldArg.ss_global_bck AS ss_global_bck, _CorticalFoldArg.ss_Volume_filename AS ss_Volume_filename, _CorticalFoldArg.ss_filename AS ss_filename, _CorticalFoldArg.ss_label AS ss_label, _CorticalFoldArg.ss_mesh_filename AS ss_mesh_filename, _CorticalFoldArg.ss_mesh_label AS ss_mesh_label, _CorticalFoldArg.thickness_mean AS thickness_mean, _CorticalFoldArg.thickness_std AS thickness_std, _CorticalFoldArg.total_sulci_length AS total_sulci_length, _CorticalFoldArg.type_bck AS type_bck, _CorticalFoldArg.type_global_bck AS type_global_bck, _CorticalFoldArg.type_global_tex AS type_global_tex, _CorticalFoldArg.type_global_tri AS type_global_tri, _CorticalFoldArg.type_global_vol AS type_global_vol, _CorticalFoldArg.type_tex AS type_tex, _CorticalFoldArg.type_tri AS type_tri, _CorticalFoldArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _CorticalFoldArg, _Graph WHERE _CorticalFoldArg.eid=_Graph.eid
CREATE VIEW CorticalFoldArg_ AS SELECT _CorticalFoldArg.eid, _CorticalFoldArg.CSF_volume, _CorticalFoldArg.CorticalFoldArg_VERSION, _CorticalFoldArg.GM_filename, _CorticalFoldArg.GM_label, _CorticalFoldArg.GM_volume, _CorticalFoldArg.LCR_filename, _CorticalFoldArg.LCR_label, _CorticalFoldArg.LCR_volume, _CorticalFoldArg.Tal_boundingbox_max, _CorticalFoldArg.Tal_boundingbox_min, _CorticalFoldArg.Talairach_rotation, _CorticalFoldArg.Talairach_scale, _CorticalFoldArg.Talairach_translation, _CorticalFoldArg.Tmtktri_global_tri, _CorticalFoldArg.Tmtktri_tri, _CorticalFoldArg.Tmtktri_filename, _CorticalFoldArg.Tmtktri_label, _CorticalFoldArg.WM_filename, _CorticalFoldArg.WM_label, _CorticalFoldArg.anterior_commissure, _CorticalFoldArg.bottom_bck, _CorticalFoldArg.bottom_global_bck, _CorticalFoldArg.bottom_filename, _CorticalFoldArg.bottom_label, _CorticalFoldArg.bottom_mesh_filename, _CorticalFoldArg.bottom_mesh_label, _CorticalFoldArg.bottom_volume_filename, _CorticalFoldArg.boundingbox_max, _CorticalFoldArg.boundingbox_min, _CorticalFoldArg.brain_hull_area, _CorticalFoldArg.brain_hull_volume, _CorticalFoldArg.cortexHemi_filename, _CorticalFoldArg.cortexHemi_label, _CorticalFoldArg.cortexWhite_filename, _CorticalFoldArg.cortexWhite_label, _CorticalFoldArg.cortical_bck, _CorticalFoldArg.cortical_global_bck, _CorticalFoldArg.cortical_global_vol, _CorticalFoldArg.cortical_Volume_filename, _CorticalFoldArg.cortical_filename, _CorticalFoldArg.cortical_label, _CorticalFoldArg.cortical_mesh_filename, _CorticalFoldArg.cortical_mesh_label, _CorticalFoldArg.custom_num_val, _CorticalFoldArg.datagraph_VERSION, _CorticalFoldArg.datagraph_compatibility_model_VERSION, _CorticalFoldArg.filename_base, _CorticalFoldArg.flipped_hemispheres, _CorticalFoldArg.fold_bck, _CorticalFoldArg.fold_global_bck, _CorticalFoldArg.fold_global_tri, _CorticalFoldArg.fold_global_vol, _CorticalFoldArg.fold_tri, _CorticalFoldArg.folds_area, _CorticalFoldArg.hull_junction_bck, _CorticalFoldArg.hull_junction_global_bck, _CorticalFoldArg.hull_junction_global_vol, _CorticalFoldArg.hull_junction_Volume_filename, _CorticalFoldArg.hull_junction_filename, _CorticalFoldArg.hull_junction_label, _CorticalFoldArg.interhemi_point, _CorticalFoldArg.junction_bck, _CorticalFoldArg.junction_global_bck, _CorticalFoldArg.junction_global_vol, _CorticalFoldArg.junction_Volume_filename, _CorticalFoldArg.junction_filename, _CorticalFoldArg.junction_label, _CorticalFoldArg.junction_mesh_filename, _CorticalFoldArg.junction_mesh_label, _CorticalFoldArg.label_property, _CorticalFoldArg.oldtri_filename, _CorticalFoldArg.oldtri_label, _CorticalFoldArg.origin, _CorticalFoldArg.other_bck, _CorticalFoldArg.other_global_bck, _CorticalFoldArg.other_Volume_filename, _CorticalFoldArg.other_filename, _CorticalFoldArg.other_label, _CorticalFoldArg.other_mesh_filename, _CorticalFoldArg.other_mesh_label, _CorticalFoldArg.plidepassage_bck, _CorticalFoldArg.plidepassage_global_bck, _CorticalFoldArg.plidepassage_Volume_filename, _CorticalFoldArg.plidepassage_filename, _CorticalFoldArg.plidepassage_label, _CorticalFoldArg.plidepassage_mesh_filename, _CorticalFoldArg.plidepassage_mesh_label, _CorticalFoldArg.posterior_commissure, _CorticalFoldArg.refbrain_hull_area, _CorticalFoldArg.refbrain_hull_volume, _CorticalFoldArg.reffolds_area, _CorticalFoldArg.reftotal_sulci_length, _CorticalFoldArg.spm_normalized, _CorticalFoldArg.spm_radio_convention, _CorticalFoldArg.spm_spm2_normalization, _CorticalFoldArg.ss_bck, _CorticalFoldArg.ss_global_bck, _CorticalFoldArg.ss_Volume_filename, _CorticalFoldArg.ss_filename, _CorticalFoldArg.ss_label, _CorticalFoldArg.ss_mesh_filename, _CorticalFoldArg.ss_mesh_label, _CorticalFoldArg.thickness_mean, _CorticalFoldArg.thickness_std, _CorticalFoldArg.total_sulci_length, _CorticalFoldArg.type_bck, _CorticalFoldArg.type_global_bck, _CorticalFoldArg.type_global_tex, _CorticalFoldArg.type_global_tri, _CorticalFoldArg.type_global_vol, _CorticalFoldArg.type_tex, _CorticalFoldArg.type_tri, _CorticalFoldArg.voxel_size, _Graph.name, _Graph.side FROM _CorticalFoldArg LEFT JOIN _Graph ON _CorticalFoldArg.eid=_Graph.eid
CREATE TRIGGER '_insert_CorticalFoldArg' INSTEAD OF INSERT ON 'CorticalFoldArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "CorticalFoldArg" );
  INSERT INTO CorticalFoldArg_( eid, CSF_volume, CorticalFoldArg_VERSION, GM_filename, GM_label, GM_volume, LCR_filename, LCR_label, LCR_volume, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_global_tri, Tmtktri_tri, Tmtktri_filename, Tmtktri_label, WM_filename, WM_label, anterior_commissure, bottom_bck, bottom_global_bck, bottom_filename, bottom_label, bottom_mesh_filename, bottom_mesh_label, bottom_volume_filename, boundingbox_max, boundingbox_min, brain_hull_area, brain_hull_volume, cortexHemi_filename, cortexHemi_label, cortexWhite_filename, cortexWhite_label, cortical_bck, cortical_global_bck, cortical_global_vol, cortical_Volume_filename, cortical_filename, cortical_label, cortical_mesh_filename, cortical_mesh_label, custom_num_val, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, flipped_hemispheres, fold_bck, fold_global_bck, fold_global_tri, fold_global_vol, fold_tri, folds_area, hull_junction_bck, hull_junction_global_bck, hull_junction_global_vol, hull_junction_Volume_filename, hull_junction_filename, hull_junction_label, interhemi_point, junction_bck, junction_global_bck, junction_global_vol, junction_Volume_filename, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, label_property, oldtri_filename, oldtri_label, origin, other_bck, other_global_bck, other_Volume_filename, other_filename, other_label, other_mesh_filename, other_mesh_label, plidepassage_bck, plidepassage_global_bck, plidepassage_Volume_filename, plidepassage_filename, plidepassage_label, plidepassage_mesh_filename, plidepassage_mesh_label, posterior_commissure, refbrain_hull_area, refbrain_hull_volume, reffolds_area, reftotal_sulci_length, spm_normalized, spm_radio_convention, spm_spm2_normalization, ss_bck, ss_global_bck, ss_Volume_filename, ss_filename, ss_label, ss_mesh_filename, ss_mesh_label, thickness_mean, thickness_std, total_sulci_length, type_bck, type_global_bck, type_global_tex, type_global_tri, type_global_vol, type_tex, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.CSF_volume, NEW.CorticalFoldArg_VERSION, NEW.GM_filename, NEW.GM_label, NEW.GM_volume, NEW.LCR_filename, NEW.LCR_label, NEW.LCR_volume, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_global_tri, NEW.Tmtktri_tri, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.WM_filename, NEW.WM_label, NEW.anterior_commissure, NEW.bottom_bck, NEW.bottom_global_bck, NEW.bottom_filename, NEW.bottom_label, NEW.bottom_mesh_filename, NEW.bottom_mesh_label, NEW.bottom_volume_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.brain_hull_area, NEW.brain_hull_volume, NEW.cortexHemi_filename, NEW.cortexHemi_label, NEW.cortexWhite_filename, NEW.cortexWhite_label, NEW.cortical_bck, NEW.cortical_global_bck, NEW.cortical_global_vol, NEW.cortical_Volume_filename, NEW.cortical_filename, NEW.cortical_label, NEW.cortical_mesh_filename, NEW.cortical_mesh_label, NEW.custom_num_val, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.flipped_hemispheres, NEW.fold_bck, NEW.fold_global_bck, NEW.fold_global_tri, NEW.fold_global_vol, NEW.fold_tri, NEW.folds_area, NEW.hull_junction_bck, NEW.hull_junction_global_bck, NEW.hull_junction_global_vol, NEW.hull_junction_Volume_filename, NEW.hull_junction_filename, NEW.hull_junction_label, NEW.interhemi_point, NEW.junction_bck, NEW.junction_global_bck, NEW.junction_global_vol, NEW.junction_Volume_filename, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.label_property, NEW.oldtri_filename, NEW.oldtri_label, NEW.origin, NEW.other_bck, NEW.other_global_bck, NEW.other_Volume_filename, NEW.other_filename, NEW.other_label, NEW.other_mesh_filename, NEW.other_mesh_label, NEW.plidepassage_bck, NEW.plidepassage_global_bck, NEW.plidepassage_Volume_filename, NEW.plidepassage_filename, NEW.plidepassage_label, NEW.plidepassage_mesh_filename, NEW.plidepassage_mesh_label, NEW.posterior_commissure, NEW.refbrain_hull_area, NEW.refbrain_hull_volume, NEW.reffolds_area, NEW.reftotal_sulci_length, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.ss_bck, NEW.ss_global_bck, NEW.ss_Volume_filename, NEW.ss_filename, NEW.ss_label, NEW.ss_mesh_filename, NEW.ss_mesh_label, NEW.thickness_mean, NEW.thickness_std, NEW.total_sulci_length, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tex, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tex, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_CorticalFoldArg_' INSTEAD OF INSERT ON 'CorticalFoldArg_' FOR EACH ROW
BEGIN
  INSERT INTO _CorticalFoldArg( eid, CSF_volume, CorticalFoldArg_VERSION, GM_filename, GM_label, GM_volume, LCR_filename, LCR_label, LCR_volume, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_global_tri, Tmtktri_tri, Tmtktri_filename, Tmtktri_label, WM_filename, WM_label, anterior_commissure, bottom_bck, bottom_global_bck, bottom_filename, bottom_label, bottom_mesh_filename, bottom_mesh_label, bottom_volume_filename, boundingbox_max, boundingbox_min, brain_hull_area, brain_hull_volume, cortexHemi_filename, cortexHemi_label, cortexWhite_filename, cortexWhite_label, cortical_bck, cortical_global_bck, cortical_global_vol, cortical_Volume_filename, cortical_filename, cortical_label, cortical_mesh_filename, cortical_mesh_label, custom_num_val, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, flipped_hemispheres, fold_bck, fold_global_bck, fold_global_tri, fold_global_vol, fold_tri, folds_area, hull_junction_bck, hull_junction_global_bck, hull_junction_global_vol, hull_junction_Volume_filename, hull_junction_filename, hull_junction_label, interhemi_point, junction_bck, junction_global_bck, junction_global_vol, junction_Volume_filename, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, label_property, oldtri_filename, oldtri_label, origin, other_bck, other_global_bck, other_Volume_filename, other_filename, other_label, other_mesh_filename, other_mesh_label, plidepassage_bck, plidepassage_global_bck, plidepassage_Volume_filename, plidepassage_filename, plidepassage_label, plidepassage_mesh_filename, plidepassage_mesh_label, posterior_commissure, refbrain_hull_area, refbrain_hull_volume, reffolds_area, reftotal_sulci_length, spm_normalized, spm_radio_convention, spm_spm2_normalization, ss_bck, ss_global_bck, ss_Volume_filename, ss_filename, ss_label, ss_mesh_filename, ss_mesh_label, thickness_mean, thickness_std, total_sulci_length, type_bck, type_global_bck, type_global_tex, type_global_tri, type_global_vol, type_tex, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.CSF_volume, NEW.CorticalFoldArg_VERSION, NEW.GM_filename, NEW.GM_label, NEW.GM_volume, NEW.LCR_filename, NEW.LCR_label, NEW.LCR_volume, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_global_tri, NEW.Tmtktri_tri, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.WM_filename, NEW.WM_label, NEW.anterior_commissure, NEW.bottom_bck, NEW.bottom_global_bck, NEW.bottom_filename, NEW.bottom_label, NEW.bottom_mesh_filename, NEW.bottom_mesh_label, NEW.bottom_volume_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.brain_hull_area, NEW.brain_hull_volume, NEW.cortexHemi_filename, NEW.cortexHemi_label, NEW.cortexWhite_filename, NEW.cortexWhite_label, NEW.cortical_bck, NEW.cortical_global_bck, NEW.cortical_global_vol, NEW.cortical_Volume_filename, NEW.cortical_filename, NEW.cortical_label, NEW.cortical_mesh_filename, NEW.cortical_mesh_label, NEW.custom_num_val, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.flipped_hemispheres, NEW.fold_bck, NEW.fold_global_bck, NEW.fold_global_tri, NEW.fold_global_vol, NEW.fold_tri, NEW.folds_area, NEW.hull_junction_bck, NEW.hull_junction_global_bck, NEW.hull_junction_global_vol, NEW.hull_junction_Volume_filename, NEW.hull_junction_filename, NEW.hull_junction_label, NEW.interhemi_point, NEW.junction_bck, NEW.junction_global_bck, NEW.junction_global_vol, NEW.junction_Volume_filename, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.label_property, NEW.oldtri_filename, NEW.oldtri_label, NEW.origin, NEW.other_bck, NEW.other_global_bck, NEW.other_Volume_filename, NEW.other_filename, NEW.other_label, NEW.other_mesh_filename, NEW.other_mesh_label, NEW.plidepassage_bck, NEW.plidepassage_global_bck, NEW.plidepassage_Volume_filename, NEW.plidepassage_filename, NEW.plidepassage_label, NEW.plidepassage_mesh_filename, NEW.plidepassage_mesh_label, NEW.posterior_commissure, NEW.refbrain_hull_area, NEW.refbrain_hull_volume, NEW.reffolds_area, NEW.reftotal_sulci_length, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.ss_bck, NEW.ss_global_bck, NEW.ss_Volume_filename, NEW.ss_filename, NEW.ss_label, NEW.ss_mesh_filename, NEW.ss_mesh_label, NEW.thickness_mean, NEW.thickness_std, NEW.total_sulci_length, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tex, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tex, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW NucleusArg AS SELECT _NucleusArg.eid AS eid, _NucleusArg.NucleusArg_VERSION AS NucleusArg_VERSION, _NucleusArg.Tmtktri_global_bck AS Tmtktri_global_bck, _NucleusArg.Tmtktri_filename AS Tmtktri_filename, _NucleusArg.Tmtktri_label AS Tmtktri_label, _NucleusArg.boundingbox_max AS boundingbox_max, _NucleusArg.boundingbox_min AS boundingbox_min, _NucleusArg.bucket_bck AS bucket_bck, _NucleusArg.bucket_global_bck AS bucket_global_bck, _NucleusArg.bucket_global_tri AS bucket_global_tri, _NucleusArg.bucket_global_vol AS bucket_global_vol, _NucleusArg.bucket_tri AS bucket_tri, _NucleusArg.bucket_filename AS bucket_filename, _NucleusArg.bucket_label AS bucket_label, _NucleusArg.datagraph_VERSION AS datagraph_VERSION, _NucleusArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _NucleusArg.filename_base AS filename_base, _NucleusArg.label_property AS label_property, _NucleusArg.nucleus_bck AS nucleus_bck, _NucleusArg.nucleus_global_bck AS nucleus_global_bck, _NucleusArg.nucleus_global_tri AS nucleus_global_tri, _NucleusArg.nucleus_global_vol AS nucleus_global_vol, _NucleusArg.nucleus_tri AS nucleus_tri, _NucleusArg.origin AS origin, _NucleusArg.roi_bck AS roi_bck, _NucleusArg.roi_global_bck AS roi_global_bck, _NucleusArg.roi_global_tri AS roi_global_tri, _NucleusArg.roi_global_vol AS roi_global_vol, _NucleusArg.roi_tri AS roi_tri, _NucleusArg.spm_normalized AS spm_normalized, _NucleusArg.spm_radio_convention AS spm_radio_convention, _NucleusArg.spm_spm2_normalization AS spm_spm2_normalization, _NucleusArg.type_bck AS type_bck, _NucleusArg.type_global_bck AS type_global_bck, _NucleusArg.type_global_tri AS type_global_tri, _NucleusArg.type_global_vol AS type_global_vol, _NucleusArg.type_tri AS type_tri, _NucleusArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _NucleusArg, _Graph WHERE _NucleusArg.eid=_Graph.eid
CREATE VIEW NucleusArg_ AS SELECT _NucleusArg.eid, _NucleusArg.NucleusArg_VERSION, _NucleusArg.Tmtktri_global_bck, _NucleusArg.Tmtktri_filename, _NucleusArg.Tmtktri_label, _NucleusArg.boundingbox_max, _NucleusArg.boundingbox_min, _NucleusArg.bucket_bck, _NucleusArg.bucket_global_bck, _NucleusArg.bucket_global_tri, _NucleusArg.bucket_global_vol, _NucleusArg.bucket_tri, _NucleusArg.bucket_filename, _NucleusArg.bucket_label, _NucleusArg.datagraph_VERSION, _NucleusArg.datagraph_compatibility_model_VERSION, _NucleusArg.filename_base, _NucleusArg.label_property, _NucleusArg.nucleus_bck, _NucleusArg.nucleus_global_bck, _NucleusArg.nucleus_global_tri, _NucleusArg.nucleus_global_vol, _NucleusArg.nucleus_tri, _NucleusArg.origin, _NucleusArg.roi_bck, _NucleusArg.roi_global_bck, _NucleusArg.roi_global_tri, _NucleusArg.roi_global_vol, _NucleusArg.roi_tri, _NucleusArg.spm_normalized, _NucleusArg.spm_radio_convention, _NucleusArg.spm_spm2_normalization, _NucleusArg.type_bck, _NucleusArg.type_global_bck, _NucleusArg.type_global_tri, _NucleusArg.type_global_vol, _NucleusArg.type_tri, _NucleusArg.voxel_size, _Graph.name, _Graph.side FROM _NucleusArg LEFT JOIN _Graph ON _NucleusArg.eid=_Graph.eid
CREATE TRIGGER '_insert_NucleusArg' INSTEAD OF INSERT ON 'NucleusArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "NucleusArg" );
  INSERT INTO NucleusArg_( eid, NucleusArg_VERSION, Tmtktri_global_bck, Tmtktri_filename, Tmtktri_label, boundingbox_max, boundingbox_min, bucket_bck, bucket_global_bck, bucket_global_tri, bucket_global_vol, bucket_tri, bucket_filename, bucket_label, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, nucleus_bck, nucleus_global_bck, nucleus_global_tri, nucleus_global_vol, nucleus_tri, origin, roi_bck, roi_global_bck, roi_global_tri, roi_global_vol, roi_tri, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tri, type_global_vol, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.NucleusArg_VERSION, NEW.Tmtktri_global_bck, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_bck, NEW.bucket_global_bck, NEW.bucket_global_tri, NEW.bucket_global_vol, NEW.bucket_tri, NEW.bucket_filename, NEW.bucket_label, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.nucleus_bck, NEW.nucleus_global_bck, NEW.nucleus_global_tri, NEW.nucleus_global_vol, NEW.nucleus_tri, NEW.origin, NEW.roi_bck, NEW.roi_global_bck, NEW.roi_global_tri, NEW.roi_global_vol, NEW.roi_tri, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_NucleusArg_' INSTEAD OF INSERT ON 'NucleusArg_' FOR EACH ROW
BEGIN
  INSERT INTO _NucleusArg( eid, NucleusArg_VERSION, Tmtktri_global_bck, Tmtktri_filename, Tmtktri_label, boundingbox_max, boundingbox_min, bucket_bck, bucket_global_bck, bucket_global_tri, bucket_global_vol, bucket_tri, bucket_filename, bucket_label, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, nucleus_bck, nucleus_global_bck, nucleus_global_tri, nucleus_global_vol, nucleus_tri, origin, roi_bck, roi_global_bck, roi_global_tri, roi_global_vol, roi_tri, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tri, type_global_vol, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.NucleusArg_VERSION, NEW.Tmtktri_global_bck, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_bck, NEW.bucket_global_bck, NEW.bucket_global_tri, NEW.bucket_global_vol, NEW.bucket_tri, NEW.bucket_filename, NEW.bucket_label, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.nucleus_bck, NEW.nucleus_global_bck, NEW.nucleus_global_tri, NEW.nucleus_global_vol, NEW.nucleus_tri, NEW.origin, NEW.roi_bck, NEW.roi_global_bck, NEW.roi_global_tri, NEW.roi_global_vol, NEW.roi_tri, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW PrimalSketchArg AS SELECT _PrimalSketchArg.eid AS eid, _PrimalSketchArg.blob_filename AS blob_filename, _PrimalSketchArg.boundingbox_max AS boundingbox_max, _PrimalSketchArg.boundingbox_min AS boundingbox_min, _PrimalSketchArg.datagraph_VERSION AS datagraph_VERSION, _PrimalSketchArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _PrimalSketchArg.filename_base AS filename_base, _PrimalSketchArg.label_property AS label_property, _PrimalSketchArg.ssblob_bck AS ssblob_bck, _PrimalSketchArg.ssblob_global_bck AS ssblob_global_bck, _PrimalSketchArg.ssblob_global_tri AS ssblob_global_tri, _PrimalSketchArg.ssblob_tri AS ssblob_tri, _PrimalSketchArg.sujet AS sujet, _PrimalSketchArg.type AS type, _PrimalSketchArg.type_bck AS type_bck, _PrimalSketchArg.type_global_bck AS type_global_bck, _PrimalSketchArg.type_global_tri AS type_global_tri, _PrimalSketchArg.type_tri AS type_tri, _PrimalSketchArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _PrimalSketchArg, _Graph WHERE _PrimalSketchArg.eid=_Graph.eid
CREATE VIEW PrimalSketchArg_ AS SELECT _PrimalSketchArg.eid, _PrimalSketchArg.blob_filename, _PrimalSketchArg.boundingbox_max, _PrimalSketchArg.boundingbox_min, _PrimalSketchArg.datagraph_VERSION, _PrimalSketchArg.datagraph_compatibility_model_VERSION, _PrimalSketchArg.filename_base, _PrimalSketchArg.label_property, _PrimalSketchArg.ssblob_bck, _PrimalSketchArg.ssblob_global_bck, _PrimalSketchArg.ssblob_global_tri, _PrimalSketchArg.ssblob_tri, _PrimalSketchArg.sujet, _PrimalSketchArg.type, _PrimalSketchArg.type_bck, _PrimalSketchArg.type_global_bck, _PrimalSketchArg.type_global_tri, _PrimalSketchArg.type_tri, _PrimalSketchArg.voxel_size, _Graph.name, _Graph.side FROM _PrimalSketchArg LEFT JOIN _Graph ON _PrimalSketchArg.eid=_Graph.eid
CREATE TRIGGER '_insert_PrimalSketchArg' INSTEAD OF INSERT ON 'PrimalSketchArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "PrimalSketchArg" );
  INSERT INTO PrimalSketchArg_( eid, blob_filename, boundingbox_max, boundingbox_min, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, ssblob_bck, ssblob_global_bck, ssblob_global_tri, ssblob_tri, sujet, type, type_bck, type_global_bck, type_global_tri, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.blob_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.ssblob_bck, NEW.ssblob_global_bck, NEW.ssblob_global_tri, NEW.ssblob_tri, NEW.sujet, NEW.type, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_PrimalSketchArg_' INSTEAD OF INSERT ON 'PrimalSketchArg_' FOR EACH ROW
BEGIN
  INSERT INTO _PrimalSketchArg( eid, blob_filename, boundingbox_max, boundingbox_min, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, label_property, ssblob_bck, ssblob_global_bck, ssblob_global_tri, ssblob_tri, sujet, type, type_bck, type_global_bck, type_global_tri, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.blob_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.label_property, NEW.ssblob_bck, NEW.ssblob_global_bck, NEW.ssblob_global_tri, NEW.ssblob_tri, NEW.sujet, NEW.type, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW RoiArg AS SELECT _RoiArg.eid AS eid, _RoiArg.RoiArg_VERSION AS RoiArg_VERSION, _RoiArg.Tmtktri_filename AS Tmtktri_filename, _RoiArg.anterior_commissure AS anterior_commissure, _RoiArg.boundingbox_max AS boundingbox_max, _RoiArg.boundingbox_min AS boundingbox_min, _RoiArg.bucket_filename AS bucket_filename, _RoiArg.datagraph_VERSION AS datagraph_VERSION, _RoiArg.datagraph_compatibility_model_VERSION AS datagraph_compatibility_model_VERSION, _RoiArg.filename_base AS filename_base, _RoiArg.interhemi_point AS interhemi_point, _RoiArg.label_property AS label_property, _RoiArg.origin AS origin, _RoiArg.posterior_commissure AS posterior_commissure, _RoiArg.roi_bck AS roi_bck, _RoiArg.roi_global_bck AS roi_global_bck, _RoiArg.roi_global_tri AS roi_global_tri, _RoiArg.roi_global_vol AS roi_global_vol, _RoiArg.roi_tri AS roi_tri, _RoiArg.roi_Volume_filename AS roi_Volume_filename, _RoiArg.roi_junction_global_tri AS roi_junction_global_tri, _RoiArg.roi_junction_tri AS roi_junction_tri, _RoiArg.roi_mesh_filename AS roi_mesh_filename, _RoiArg.roi_mesh_junction_filename AS roi_mesh_junction_filename, _RoiArg.roi_mesh_junction_label AS roi_mesh_junction_label, _RoiArg.roi_mesh_label AS roi_mesh_label, _RoiArg.spm_normalized AS spm_normalized, _RoiArg.spm_radio_convention AS spm_radio_convention, _RoiArg.spm_spm2_normalization AS spm_spm2_normalization, _RoiArg.type_bck AS type_bck, _RoiArg.type_global_bck AS type_global_bck, _RoiArg.type_global_tri AS type_global_tri, _RoiArg.type_global_vol AS type_global_vol, _RoiArg.type_tri AS type_tri, _RoiArg.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _RoiArg, _Graph WHERE _RoiArg.eid=_Graph.eid
CREATE VIEW RoiArg_ AS SELECT _RoiArg.eid, _RoiArg.RoiArg_VERSION, _RoiArg.Tmtktri_filename, _RoiArg.anterior_commissure, _RoiArg.boundingbox_max, _RoiArg.boundingbox_min, _RoiArg.bucket_filename, _RoiArg.datagraph_VERSION, _RoiArg.datagraph_compatibility_model_VERSION, _RoiArg.filename_base, _RoiArg.interhemi_point, _RoiArg.label_property, _RoiArg.origin, _RoiArg.posterior_commissure, _RoiArg.roi_bck, _RoiArg.roi_global_bck, _RoiArg.roi_global_tri, _RoiArg.roi_global_vol, _RoiArg.roi_tri, _RoiArg.roi_Volume_filename, _RoiArg.roi_junction_global_tri, _RoiArg.roi_junction_tri, _RoiArg.roi_mesh_filename, _RoiArg.roi_mesh_junction_filename, _RoiArg.roi_mesh_junction_label, _RoiArg.roi_mesh_label, _RoiArg.spm_normalized, _RoiArg.spm_radio_convention, _RoiArg.spm_spm2_normalization, _RoiArg.type_bck, _RoiArg.type_global_bck, _RoiArg.type_global_tri, _RoiArg.type_global_vol, _RoiArg.type_tri, _RoiArg.voxel_size, _Graph.name, _Graph.side FROM _RoiArg LEFT JOIN _Graph ON _RoiArg.eid=_Graph.eid
CREATE TRIGGER '_insert_RoiArg' INSTEAD OF INSERT ON 'RoiArg' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "RoiArg" );
  INSERT INTO RoiArg_( eid, RoiArg_VERSION, Tmtktri_filename, anterior_commissure, boundingbox_max, boundingbox_min, bucket_filename, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, interhemi_point, label_property, origin, posterior_commissure, roi_bck, roi_global_bck, roi_global_tri, roi_global_vol, roi_tri, roi_Volume_filename, roi_junction_global_tri, roi_junction_tri, roi_mesh_filename, roi_mesh_junction_filename, roi_mesh_junction_label, roi_mesh_label, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tri, type_global_vol, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.RoiArg_VERSION, NEW.Tmtktri_filename, NEW.anterior_commissure, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_filename, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.interhemi_point, NEW.label_property, NEW.origin, NEW.posterior_commissure, NEW.roi_bck, NEW.roi_global_bck, NEW.roi_global_tri, NEW.roi_global_vol, NEW.roi_tri, NEW.roi_Volume_filename, NEW.roi_junction_global_tri, NEW.roi_junction_tri, NEW.roi_mesh_filename, NEW.roi_mesh_junction_filename, NEW.roi_mesh_junction_label, NEW.roi_mesh_label, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_RoiArg_' INSTEAD OF INSERT ON 'RoiArg_' FOR EACH ROW
BEGIN
  INSERT INTO _RoiArg( eid, RoiArg_VERSION, Tmtktri_filename, anterior_commissure, boundingbox_max, boundingbox_min, bucket_filename, datagraph_VERSION, datagraph_compatibility_model_VERSION, filename_base, interhemi_point, label_property, origin, posterior_commissure, roi_bck, roi_global_bck, roi_global_tri, roi_global_vol, roi_tri, roi_Volume_filename, roi_junction_global_tri, roi_junction_tri, roi_mesh_filename, roi_mesh_junction_filename, roi_mesh_junction_label, roi_mesh_label, spm_normalized, spm_radio_convention, spm_spm2_normalization, type_bck, type_global_bck, type_global_tri, type_global_vol, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.RoiArg_VERSION, NEW.Tmtktri_filename, NEW.anterior_commissure, NEW.boundingbox_max, NEW.boundingbox_min, NEW.bucket_filename, NEW.datagraph_VERSION, NEW.datagraph_compatibility_model_VERSION, NEW.filename_base, NEW.interhemi_point, NEW.label_property, NEW.origin, NEW.posterior_commissure, NEW.roi_bck, NEW.roi_global_bck, NEW.roi_global_tri, NEW.roi_global_vol, NEW.roi_tri, NEW.roi_Volume_filename, NEW.roi_junction_global_tri, NEW.roi_junction_tri, NEW.roi_mesh_filename, NEW.roi_mesh_junction_filename, NEW.roi_mesh_junction_label, NEW.roi_mesh_label, NEW.spm_normalized, NEW.spm_radio_convention, NEW.spm_spm2_normalization, NEW.type_bck, NEW.type_global_bck, NEW.type_global_tri, NEW.type_global_vol, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW b2b AS SELECT _b2b.eid AS eid, _b2b.similarity AS similarity, _b2b.type AS type,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _b2b, _Edge WHERE _b2b.eid=_Edge.eid
CREATE VIEW b2b_ AS SELECT _b2b.eid, _b2b.similarity, _b2b.type, _Edge.vertex1, _Edge.vertex2 FROM _b2b LEFT JOIN _Edge ON _b2b.eid=_Edge.eid
CREATE TRIGGER '_insert_b2b' INSTEAD OF INSERT ON 'b2b' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "b2b" );
  INSERT INTO b2b_( eid, similarity, type, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.similarity, NEW.type, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_b2b_' INSTEAD OF INSERT ON 'b2b_' FOR EACH ROW
BEGIN
  INSERT INTO _b2b( eid, similarity, type ) VALUES ( NEW.eid, NEW.similarity, NEW.type );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW bifurcation AS SELECT _bifurcation.eid AS eid, _bifurcation.blob_down AS blob_down, _bifurcation.blob_up AS blob_up, _bifurcation.type AS type,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _bifurcation, _Edge WHERE _bifurcation.eid=_Edge.eid
CREATE VIEW bifurcation_ AS SELECT _bifurcation.eid, _bifurcation.blob_down, _bifurcation.blob_up, _bifurcation.type, _Edge.vertex1, _Edge.vertex2 FROM _bifurcation LEFT JOIN _Edge ON _bifurcation.eid=_Edge.eid
CREATE TRIGGER '_insert_bifurcation' INSTEAD OF INSERT ON 'bifurcation' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "bifurcation" );
  INSERT INTO bifurcation_( eid, blob_down, blob_up, type, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.blob_down, NEW.blob_up, NEW.type, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_bifurcation_' INSTEAD OF INSERT ON 'bifurcation_' FOR EACH ROW
BEGIN
  INSERT INTO _bifurcation( eid, blob_down, blob_up, type ) VALUES ( NEW.eid, NEW.blob_down, NEW.blob_up, NEW.type );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW blob_saddle_link AS SELECT _blob_saddle_link.eid AS eid, _Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _blob_saddle_link, _Edge WHERE _blob_saddle_link.eid=_Edge.eid
CREATE VIEW blob_saddle_link_ AS SELECT _blob_saddle_link.eid, _Edge.vertex1, _Edge.vertex2 FROM _blob_saddle_link LEFT JOIN _Edge ON _blob_saddle_link.eid=_Edge.eid
CREATE TRIGGER '_insert_blob_saddle_link' INSTEAD OF INSERT ON 'blob_saddle_link' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "blob_saddle_link" );
  INSERT INTO blob_saddle_link_( eid, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_blob_saddle_link_' INSTEAD OF INSERT ON 'blob_saddle_link_' FOR EACH ROW
BEGIN
  INSERT INTO _blob_saddle_link( eid ) VALUES ( NEW.eid );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW cluster AS SELECT _cluster.eid AS eid, _cluster.Talairach_par_mm_endpar_ AS Talairach_par_mm_endpar_, _cluster.Tmtktri_filename AS Tmtktri_filename, _cluster.Tmtktri_label AS Tmtktri_label, _cluster.apparitionflag AS apparitionflag, _cluster.blob_saddle_type AS blob_saddle_type, _cluster.bucket_filename AS bucket_filename, _cluster.bucket_label AS bucket_label, _cluster.cluster_filename AS cluster_filename, _cluster.cluster_label AS cluster_label, _cluster.custom_num_val AS custom_num_val, _cluster.gravity_center AS gravity_center, _cluster.gray_level_blobs AS gray_level_blobs, _cluster.graph_index AS graph_index, _cluster.jamflag_down AS jamflag_down, _cluster.jamflag_up AS jamflag_up, _cluster.label AS label, _cluster.lifetime AS lifetime, _cluster.maximum AS maximum, _cluster.maximum_filename AS maximum_filename, _cluster.maximum_label AS maximum_label, _cluster.maximum_position AS maximum_position, _cluster.maxscale AS maxscale, _cluster.mesh_filename_maximum AS mesh_filename_maximum, _cluster.mesh_filename_minimum AS mesh_filename_minimum, _cluster.mesh_filename_minimum2 AS mesh_filename_minimum2, _cluster.minimum AS minimum, _cluster.minimum2_filename AS minimum2_filename, _cluster.minimum2_label AS minimum2_label, _cluster.minimum_filename AS minimum_filename, _cluster.minimum_label AS minimum_label, _cluster.minimum_position AS minimum_position, _cluster.minscale AS minscale, _cluster.name AS name, _cluster.point_number AS point_number, _cluster.roi_label AS roi_label, _cluster.roi_label_maximum AS roi_label_maximum, _cluster.roi_label_minimum AS roi_label_minimum, _cluster.roi_label_minimum2 AS roi_label_minimum2, _cluster.scale AS scale, _cluster.size AS size, _cluster.surface AS surface, _cluster.volume AS volume, _cluster.wflag_down AS wflag_down, _cluster.wflag_up AS wflag_up,_Vertex.graph AS graph FROM _cluster, _Vertex WHERE _cluster.eid=_Vertex.eid
CREATE VIEW cluster_ AS SELECT _cluster.eid, _cluster.Talairach_par_mm_endpar_, _cluster.Tmtktri_filename, _cluster.Tmtktri_label, _cluster.apparitionflag, _cluster.blob_saddle_type, _cluster.bucket_filename, _cluster.bucket_label, _cluster.cluster_filename, _cluster.cluster_label, _cluster.custom_num_val, _cluster.gravity_center, _cluster.gray_level_blobs, _cluster.graph_index, _cluster.jamflag_down, _cluster.jamflag_up, _cluster.label, _cluster.lifetime, _cluster.maximum, _cluster.maximum_filename, _cluster.maximum_label, _cluster.maximum_position, _cluster.maxscale, _cluster.mesh_filename_maximum, _cluster.mesh_filename_minimum, _cluster.mesh_filename_minimum2, _cluster.minimum, _cluster.minimum2_filename, _cluster.minimum2_label, _cluster.minimum_filename, _cluster.minimum_label, _cluster.minimum_position, _cluster.minscale, _cluster.name, _cluster.point_number, _cluster.roi_label, _cluster.roi_label_maximum, _cluster.roi_label_minimum, _cluster.roi_label_minimum2, _cluster.scale, _cluster.size, _cluster.surface, _cluster.volume, _cluster.wflag_down, _cluster.wflag_up, _Vertex.graph FROM _cluster LEFT JOIN _Vertex ON _cluster.eid=_Vertex.eid
CREATE TRIGGER '_insert_cluster' INSTEAD OF INSERT ON 'cluster' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "cluster" );
  INSERT INTO cluster_( eid, Talairach_par_mm_endpar_, Tmtktri_filename, Tmtktri_label, apparitionflag, blob_saddle_type, bucket_filename, bucket_label, cluster_filename, cluster_label, custom_num_val, gravity_center, gray_level_blobs, graph_index, jamflag_down, jamflag_up, label, lifetime, maximum, maximum_filename, maximum_label, maximum_position, maxscale, mesh_filename_maximum, mesh_filename_minimum, mesh_filename_minimum2, minimum, minimum2_filename, minimum2_label, minimum_filename, minimum_label, minimum_position, minscale, name, point_number, roi_label, roi_label_maximum, roi_label_minimum, roi_label_minimum2, scale, size, surface, volume, wflag_down, wflag_up, graph ) VALUES ( last_insert_rowid(), NEW.Talairach_par_mm_endpar_, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.apparitionflag, NEW.blob_saddle_type, NEW.bucket_filename, NEW.bucket_label, NEW.cluster_filename, NEW.cluster_label, NEW.custom_num_val, NEW.gravity_center, NEW.gray_level_blobs, NEW.graph_index, NEW.jamflag_down, NEW.jamflag_up, NEW.label, NEW.lifetime, NEW.maximum, NEW.maximum_filename, NEW.maximum_label, NEW.maximum_position, NEW.maxscale, NEW.mesh_filename_maximum, NEW.mesh_filename_minimum, NEW.mesh_filename_minimum2, NEW.minimum, NEW.minimum2_filename, NEW.minimum2_label, NEW.minimum_filename, NEW.minimum_label, NEW.minimum_position, NEW.minscale, NEW.name, NEW.point_number, NEW.roi_label, NEW.roi_label_maximum, NEW.roi_label_minimum, NEW.roi_label_minimum2, NEW.scale, NEW.size, NEW.surface, NEW.volume, NEW.wflag_down, NEW.wflag_up, NEW.graph );
END
CREATE TRIGGER '_insert_cluster_' INSTEAD OF INSERT ON 'cluster_' FOR EACH ROW
BEGIN
  INSERT INTO _cluster( eid, Talairach_par_mm_endpar_, Tmtktri_filename, Tmtktri_label, apparitionflag, blob_saddle_type, bucket_filename, bucket_label, cluster_filename, cluster_label, custom_num_val, gravity_center, gray_level_blobs, graph_index, jamflag_down, jamflag_up, label, lifetime, maximum, maximum_filename, maximum_label, maximum_position, maxscale, mesh_filename_maximum, mesh_filename_minimum, mesh_filename_minimum2, minimum, minimum2_filename, minimum2_label, minimum_filename, minimum_label, minimum_position, minscale, name, point_number, roi_label, roi_label_maximum, roi_label_minimum, roi_label_minimum2, scale, size, surface, volume, wflag_down, wflag_up ) VALUES ( NEW.eid, NEW.Talairach_par_mm_endpar_, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.apparitionflag, NEW.blob_saddle_type, NEW.bucket_filename, NEW.bucket_label, NEW.cluster_filename, NEW.cluster_label, NEW.custom_num_val, NEW.gravity_center, NEW.gray_level_blobs, NEW.graph_index, NEW.jamflag_down, NEW.jamflag_up, NEW.label, NEW.lifetime, NEW.maximum, NEW.maximum_filename, NEW.maximum_label, NEW.maximum_position, NEW.maxscale, NEW.mesh_filename_maximum, NEW.mesh_filename_minimum, NEW.mesh_filename_minimum2, NEW.minimum, NEW.minimum2_filename, NEW.minimum2_label, NEW.minimum_filename, NEW.minimum_label, NEW.minimum_position, NEW.minscale, NEW.name, NEW.point_number, NEW.roi_label, NEW.roi_label_maximum, NEW.roi_label_minimum, NEW.roi_label_minimum2, NEW.scale, NEW.size, NEW.surface, NEW.volume, NEW.wflag_down, NEW.wflag_up );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW cortical AS SELECT _cortical.eid AS eid, _cortical.SS1nearest AS SS1nearest, _cortical.SS2nearest AS SS2nearest, _cortical.cortical_filename AS cortical_filename, _cortical.cortical_label AS cortical_label, _cortical.cortical_mesh_filename AS cortical_mesh_filename, _cortical.cortical_mesh_label AS cortical_mesh_label, _cortical.dist AS dist, _cortical.length AS length, _cortical.point_number AS point_number, _cortical.refSS1nearest AS refSS1nearest, _cortical.refSS2nearest AS refSS2nearest, _cortical.refdist AS refdist, _cortical.reflength AS reflength, _cortical.refmean_connected_dir AS refmean_connected_dir, _cortical.refmean_connected_dist AS refmean_connected_dist, _cortical.refsize AS refsize, _cortical.refstd_connected_dist AS refstd_connected_dist, _cortical.roi_label AS roi_label, _cortical.size AS size,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _cortical, _Edge WHERE _cortical.eid=_Edge.eid
CREATE VIEW cortical_ AS SELECT _cortical.eid, _cortical.SS1nearest, _cortical.SS2nearest, _cortical.cortical_filename, _cortical.cortical_label, _cortical.cortical_mesh_filename, _cortical.cortical_mesh_label, _cortical.dist, _cortical.length, _cortical.point_number, _cortical.refSS1nearest, _cortical.refSS2nearest, _cortical.refdist, _cortical.reflength, _cortical.refmean_connected_dir, _cortical.refmean_connected_dist, _cortical.refsize, _cortical.refstd_connected_dist, _cortical.roi_label, _cortical.size, _Edge.vertex1, _Edge.vertex2 FROM _cortical LEFT JOIN _Edge ON _cortical.eid=_Edge.eid
CREATE TRIGGER '_insert_cortical' INSTEAD OF INSERT ON 'cortical' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "cortical" );
  INSERT INTO cortical_( eid, SS1nearest, SS2nearest, cortical_filename, cortical_label, cortical_mesh_filename, cortical_mesh_label, dist, length, point_number, refSS1nearest, refSS2nearest, refdist, reflength, refmean_connected_dir, refmean_connected_dist, refsize, refstd_connected_dist, roi_label, size, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.SS1nearest, NEW.SS2nearest, NEW.cortical_filename, NEW.cortical_label, NEW.cortical_mesh_filename, NEW.cortical_mesh_label, NEW.dist, NEW.length, NEW.point_number, NEW.refSS1nearest, NEW.refSS2nearest, NEW.refdist, NEW.reflength, NEW.refmean_connected_dir, NEW.refmean_connected_dist, NEW.refsize, NEW.refstd_connected_dist, NEW.roi_label, NEW.size, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_cortical_' INSTEAD OF INSERT ON 'cortical_' FOR EACH ROW
BEGIN
  INSERT INTO _cortical( eid, SS1nearest, SS2nearest, cortical_filename, cortical_label, cortical_mesh_filename, cortical_mesh_label, dist, length, point_number, refSS1nearest, refSS2nearest, refdist, reflength, refmean_connected_dir, refmean_connected_dist, refsize, refstd_connected_dist, roi_label, size ) VALUES ( NEW.eid, NEW.SS1nearest, NEW.SS2nearest, NEW.cortical_filename, NEW.cortical_label, NEW.cortical_mesh_filename, NEW.cortical_mesh_label, NEW.dist, NEW.length, NEW.point_number, NEW.refSS1nearest, NEW.refSS2nearest, NEW.refdist, NEW.reflength, NEW.refmean_connected_dir, NEW.refmean_connected_dist, NEW.refsize, NEW.refstd_connected_dist, NEW.roi_label, NEW.size );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW fold AS SELECT _fold.eid AS eid, _fold.CSF_volume AS CSF_volume, _fold.GM_filename AS GM_filename, _fold.GM_label AS GM_label, _fold.GM_volume AS GM_volume, _fold.LCR_filename AS LCR_filename, _fold.LCR_label AS LCR_label, _fold.LCR_volume AS LCR_volume, _fold.Tal_boundingbox_max AS Tal_boundingbox_max, _fold.Tal_boundingbox_min AS Tal_boundingbox_min, _fold.Tmtktri_filename AS Tmtktri_filename, _fold.Tmtktri_label AS Tmtktri_label, _fold.WM_filename AS WM_filename, _fold.WM_label AS WM_label, _fold.bottom_filename AS bottom_filename, _fold.bottom_label AS bottom_label, _fold.bottom_mesh_filename AS bottom_mesh_filename, _fold.bottom_mesh_label AS bottom_mesh_label, _fold.bottom_point_number AS bottom_point_number, _fold.boundingbox_max AS boundingbox_max, _fold.boundingbox_min AS boundingbox_min, _fold.cortexHemi_filename AS cortexHemi_filename, _fold.cortexHemi_label AS cortexHemi_label, _fold.cortexWhite_filename AS cortexWhite_filename, _fold.cortexWhite_label AS cortexWhite_label, _fold.custom_num_val AS custom_num_val, _fold.depth_direction AS depth_direction, _fold.depth_direction_weight AS depth_direction_weight, _fold.direction AS direction, _fold.gravity_center AS gravity_center, _fold.grey_surface_area AS grey_surface_area, _fold.hull_normal AS hull_normal, _fold.hull_normal_weight AS hull_normal_weight, _fold.graph_index AS graph_index, _fold.label AS label, _fold.maxdepth AS maxdepth, _fold.mean_depth AS mean_depth, _fold.mid_interface_voxels AS mid_interface_voxels, _fold.mindepth AS mindepth, _fold.moments AS moments, _fold.name AS name, _fold.normal AS normal, _fold.oldtri_filename AS oldtri_filename, _fold.oldtri_label AS oldtri_label, _fold.other_filename AS other_filename, _fold.other_label AS other_label, _fold.other_mesh_filename AS other_mesh_filename, _fold.other_mesh_label AS other_mesh_label, _fold.other_point_number AS other_point_number, _fold.point_number AS point_number, _fold.refdepth_direction AS refdepth_direction, _fold.refdirection AS refdirection, _fold.refgravity_center AS refgravity_center, _fold.refhull_normal AS refhull_normal, _fold.refmaxdepth AS refmaxdepth, _fold.refmean_depth AS refmean_depth, _fold.refmindepth AS refmindepth, _fold.refmoments AS refmoments, _fold.refnormal AS refnormal, _fold.refsize AS refsize, _fold.refsurface_area AS refsurface_area, _fold.rootsbassin AS rootsbassin, _fold.size AS size, _fold.skeleton_label AS skeleton_label, _fold.ss_filename AS ss_filename, _fold.ss_label AS ss_label, _fold.ss_mesh_filename AS ss_mesh_filename, _fold.ss_mesh_label AS ss_mesh_label, _fold.ss_point_number AS ss_point_number, _fold.surface_area AS surface_area, _fold.talcovar AS talcovar, _fold.thickness_mean AS thickness_mean, _fold.thickness_std AS thickness_std, _fold.used_labels AS used_labels, _fold.white_surface_area AS white_surface_area,_Vertex.graph AS graph FROM _fold, _Vertex WHERE _fold.eid=_Vertex.eid
CREATE VIEW fold_ AS SELECT _fold.eid, _fold.CSF_volume, _fold.GM_filename, _fold.GM_label, _fold.GM_volume, _fold.LCR_filename, _fold.LCR_label, _fold.LCR_volume, _fold.Tal_boundingbox_max, _fold.Tal_boundingbox_min, _fold.Tmtktri_filename, _fold.Tmtktri_label, _fold.WM_filename, _fold.WM_label, _fold.bottom_filename, _fold.bottom_label, _fold.bottom_mesh_filename, _fold.bottom_mesh_label, _fold.bottom_point_number, _fold.boundingbox_max, _fold.boundingbox_min, _fold.cortexHemi_filename, _fold.cortexHemi_label, _fold.cortexWhite_filename, _fold.cortexWhite_label, _fold.custom_num_val, _fold.depth_direction, _fold.depth_direction_weight, _fold.direction, _fold.gravity_center, _fold.grey_surface_area, _fold.hull_normal, _fold.hull_normal_weight, _fold.graph_index, _fold.label, _fold.maxdepth, _fold.mean_depth, _fold.mid_interface_voxels, _fold.mindepth, _fold.moments, _fold.name, _fold.normal, _fold.oldtri_filename, _fold.oldtri_label, _fold.other_filename, _fold.other_label, _fold.other_mesh_filename, _fold.other_mesh_label, _fold.other_point_number, _fold.point_number, _fold.refdepth_direction, _fold.refdirection, _fold.refgravity_center, _fold.refhull_normal, _fold.refmaxdepth, _fold.refmean_depth, _fold.refmindepth, _fold.refmoments, _fold.refnormal, _fold.refsize, _fold.refsurface_area, _fold.rootsbassin, _fold.size, _fold.skeleton_label, _fold.ss_filename, _fold.ss_label, _fold.ss_mesh_filename, _fold.ss_mesh_label, _fold.ss_point_number, _fold.surface_area, _fold.talcovar, _fold.thickness_mean, _fold.thickness_std, _fold.used_labels, _fold.white_surface_area, _Vertex.graph FROM _fold LEFT JOIN _Vertex ON _fold.eid=_Vertex.eid
CREATE TRIGGER '_insert_fold' INSTEAD OF INSERT ON 'fold' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "fold" );
  INSERT INTO fold_( eid, CSF_volume, GM_filename, GM_label, GM_volume, LCR_filename, LCR_label, LCR_volume, Tal_boundingbox_max, Tal_boundingbox_min, Tmtktri_filename, Tmtktri_label, WM_filename, WM_label, bottom_filename, bottom_label, bottom_mesh_filename, bottom_mesh_label, bottom_point_number, boundingbox_max, boundingbox_min, cortexHemi_filename, cortexHemi_label, cortexWhite_filename, cortexWhite_label, custom_num_val, depth_direction, depth_direction_weight, direction, gravity_center, grey_surface_area, hull_normal, hull_normal_weight, graph_index, label, maxdepth, mean_depth, mid_interface_voxels, mindepth, moments, name, normal, oldtri_filename, oldtri_label, other_filename, other_label, other_mesh_filename, other_mesh_label, other_point_number, point_number, refdepth_direction, refdirection, refgravity_center, refhull_normal, refmaxdepth, refmean_depth, refmindepth, refmoments, refnormal, refsize, refsurface_area, rootsbassin, size, skeleton_label, ss_filename, ss_label, ss_mesh_filename, ss_mesh_label, ss_point_number, surface_area, talcovar, thickness_mean, thickness_std, used_labels, white_surface_area, graph ) VALUES ( last_insert_rowid(), NEW.CSF_volume, NEW.GM_filename, NEW.GM_label, NEW.GM_volume, NEW.LCR_filename, NEW.LCR_label, NEW.LCR_volume, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.WM_filename, NEW.WM_label, NEW.bottom_filename, NEW.bottom_label, NEW.bottom_mesh_filename, NEW.bottom_mesh_label, NEW.bottom_point_number, NEW.boundingbox_max, NEW.boundingbox_min, NEW.cortexHemi_filename, NEW.cortexHemi_label, NEW.cortexWhite_filename, NEW.cortexWhite_label, NEW.custom_num_val, NEW.depth_direction, NEW.depth_direction_weight, NEW.direction, NEW.gravity_center, NEW.grey_surface_area, NEW.hull_normal, NEW.hull_normal_weight, NEW.graph_index, NEW.label, NEW.maxdepth, NEW.mean_depth, NEW.mid_interface_voxels, NEW.mindepth, NEW.moments, NEW.name, NEW.normal, NEW.oldtri_filename, NEW.oldtri_label, NEW.other_filename, NEW.other_label, NEW.other_mesh_filename, NEW.other_mesh_label, NEW.other_point_number, NEW.point_number, NEW.refdepth_direction, NEW.refdirection, NEW.refgravity_center, NEW.refhull_normal, NEW.refmaxdepth, NEW.refmean_depth, NEW.refmindepth, NEW.refmoments, NEW.refnormal, NEW.refsize, NEW.refsurface_area, NEW.rootsbassin, NEW.size, NEW.skeleton_label, NEW.ss_filename, NEW.ss_label, NEW.ss_mesh_filename, NEW.ss_mesh_label, NEW.ss_point_number, NEW.surface_area, NEW.talcovar, NEW.thickness_mean, NEW.thickness_std, NEW.used_labels, NEW.white_surface_area, NEW.graph );
END
CREATE TRIGGER '_insert_fold_' INSTEAD OF INSERT ON 'fold_' FOR EACH ROW
BEGIN
  INSERT INTO _fold( eid, CSF_volume, GM_filename, GM_label, GM_volume, LCR_filename, LCR_label, LCR_volume, Tal_boundingbox_max, Tal_boundingbox_min, Tmtktri_filename, Tmtktri_label, WM_filename, WM_label, bottom_filename, bottom_label, bottom_mesh_filename, bottom_mesh_label, bottom_point_number, boundingbox_max, boundingbox_min, cortexHemi_filename, cortexHemi_label, cortexWhite_filename, cortexWhite_label, custom_num_val, depth_direction, depth_direction_weight, direction, gravity_center, grey_surface_area, hull_normal, hull_normal_weight, graph_index, label, maxdepth, mean_depth, mid_interface_voxels, mindepth, moments, name, normal, oldtri_filename, oldtri_label, other_filename, other_label, other_mesh_filename, other_mesh_label, other_point_number, point_number, refdepth_direction, refdirection, refgravity_center, refhull_normal, refmaxdepth, refmean_depth, refmindepth, refmoments, refnormal, refsize, refsurface_area, rootsbassin, size, skeleton_label, ss_filename, ss_label, ss_mesh_filename, ss_mesh_label, ss_point_number, surface_area, talcovar, thickness_mean, thickness_std, used_labels, white_surface_area ) VALUES ( NEW.eid, NEW.CSF_volume, NEW.GM_filename, NEW.GM_label, NEW.GM_volume, NEW.LCR_filename, NEW.LCR_label, NEW.LCR_volume, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.WM_filename, NEW.WM_label, NEW.bottom_filename, NEW.bottom_label, NEW.bottom_mesh_filename, NEW.bottom_mesh_label, NEW.bottom_point_number, NEW.boundingbox_max, NEW.boundingbox_min, NEW.cortexHemi_filename, NEW.cortexHemi_label, NEW.cortexWhite_filename, NEW.cortexWhite_label, NEW.custom_num_val, NEW.depth_direction, NEW.depth_direction_weight, NEW.direction, NEW.gravity_center, NEW.grey_surface_area, NEW.hull_normal, NEW.hull_normal_weight, NEW.graph_index, NEW.label, NEW.maxdepth, NEW.mean_depth, NEW.mid_interface_voxels, NEW.mindepth, NEW.moments, NEW.name, NEW.normal, NEW.oldtri_filename, NEW.oldtri_label, NEW.other_filename, NEW.other_label, NEW.other_mesh_filename, NEW.other_mesh_label, NEW.other_point_number, NEW.point_number, NEW.refdepth_direction, NEW.refdirection, NEW.refgravity_center, NEW.refhull_normal, NEW.refmaxdepth, NEW.refmean_depth, NEW.refmindepth, NEW.refmoments, NEW.refnormal, NEW.refsize, NEW.refsurface_area, NEW.rootsbassin, NEW.size, NEW.skeleton_label, NEW.ss_filename, NEW.ss_label, NEW.ss_mesh_filename, NEW.ss_mesh_label, NEW.ss_point_number, NEW.surface_area, NEW.talcovar, NEW.thickness_mean, NEW.thickness_std, NEW.used_labels, NEW.white_surface_area );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW fold_name AS SELECT _fold_name.eid AS eid, _fold_name.color AS color, _fold_name.label AS label, _fold_name.name AS name,_Vertex.graph AS graph FROM _fold_name, _Vertex WHERE _fold_name.eid=_Vertex.eid
CREATE VIEW fold_name_ AS SELECT _fold_name.eid, _fold_name.color, _fold_name.label, _fold_name.name, _Vertex.graph FROM _fold_name LEFT JOIN _Vertex ON _fold_name.eid=_Vertex.eid
CREATE TRIGGER '_insert_fold_name' INSTEAD OF INSERT ON 'fold_name' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "fold_name" );
  INSERT INTO fold_name_( eid, color, label, name, graph ) VALUES ( last_insert_rowid(), NEW.color, NEW.label, NEW.name, NEW.graph );
END
CREATE TRIGGER '_insert_fold_name_' INSTEAD OF INSERT ON 'fold_name_' FOR EACH ROW
BEGIN
  INSERT INTO _fold_name( eid, color, label, name ) VALUES ( NEW.eid, NEW.color, NEW.label, NEW.name );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW glb AS SELECT _glb.eid AS eid, _glb.boundingbox_max AS boundingbox_max, _glb.boundingbox_min AS boundingbox_min, _glb.glb_filename AS glb_filename, _glb.glb_label AS glb_label, _glb.graph_index AS graph_index, _glb.nodes AS nodes, _glb.scale AS scale, _glb.t AS t, _glb.tValue AS tValue,_Vertex.graph AS graph FROM _glb, _Vertex WHERE _glb.eid=_Vertex.eid
CREATE VIEW glb_ AS SELECT _glb.eid, _glb.boundingbox_max, _glb.boundingbox_min, _glb.glb_filename, _glb.glb_label, _glb.graph_index, _glb.nodes, _glb.scale, _glb.t, _glb.tValue, _Vertex.graph FROM _glb LEFT JOIN _Vertex ON _glb.eid=_Vertex.eid
CREATE TRIGGER '_insert_glb' INSTEAD OF INSERT ON 'glb' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "glb" );
  INSERT INTO glb_( eid, boundingbox_max, boundingbox_min, glb_filename, glb_label, graph_index, nodes, scale, t, tValue, graph ) VALUES ( last_insert_rowid(), NEW.boundingbox_max, NEW.boundingbox_min, NEW.glb_filename, NEW.glb_label, NEW.graph_index, NEW.nodes, NEW.scale, NEW.t, NEW.tValue, NEW.graph );
END
CREATE TRIGGER '_insert_glb_' INSTEAD OF INSERT ON 'glb_' FOR EACH ROW
BEGIN
  INSERT INTO _glb( eid, boundingbox_max, boundingbox_min, glb_filename, glb_label, graph_index, nodes, scale, t, tValue ) VALUES ( NEW.eid, NEW.boundingbox_max, NEW.boundingbox_min, NEW.glb_filename, NEW.glb_label, NEW.graph_index, NEW.nodes, NEW.scale, NEW.t, NEW.tValue );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW graphe_sillon AS SELECT _graphe_sillon.eid AS eid, _graphe_sillon.Tal_boundingbox_max AS Tal_boundingbox_max, _graphe_sillon.Tal_boundingbox_min AS Tal_boundingbox_min, _graphe_sillon.Talairach_rotation AS Talairach_rotation, _graphe_sillon.Talairach_scale AS Talairach_scale, _graphe_sillon.Talairach_translation AS Talairach_translation, _graphe_sillon.Tmtktri_filename AS Tmtktri_filename, _graphe_sillon.anterior_commissure AS anterior_commissure, _graphe_sillon.bottom_filename AS bottom_filename, _graphe_sillon.boundingbox_max AS boundingbox_max, _graphe_sillon.boundingbox_min AS boundingbox_min, _graphe_sillon.cortical_bck AS cortical_bck, _graphe_sillon.cortical_global_bck AS cortical_global_bck, _graphe_sillon.filename_base AS filename_base, _graphe_sillon.fold_bck AS fold_bck, _graphe_sillon.fold_tri AS fold_tri, _graphe_sillon.gravity_center AS gravity_center, _graphe_sillon.hull_junction_bck AS hull_junction_bck, _graphe_sillon.interhemi_point AS interhemi_point, _graphe_sillon.junction_bck AS junction_bck, _graphe_sillon.oldtri_filename AS oldtri_filename, _graphe_sillon.other_filename AS other_filename, _graphe_sillon.plidepassage_bck AS plidepassage_bck, _graphe_sillon.posterior_commissure AS posterior_commissure, _graphe_sillon.roi_label AS roi_label, _graphe_sillon.ss_filename AS ss_filename, _graphe_sillon.type_bck AS type_bck, _graphe_sillon.type_tri AS type_tri, _graphe_sillon.voxel_size AS voxel_size,_Graph.name AS name, _Graph.side AS side FROM _graphe_sillon, _Graph WHERE _graphe_sillon.eid=_Graph.eid
CREATE VIEW graphe_sillon_ AS SELECT _graphe_sillon.eid, _graphe_sillon.Tal_boundingbox_max, _graphe_sillon.Tal_boundingbox_min, _graphe_sillon.Talairach_rotation, _graphe_sillon.Talairach_scale, _graphe_sillon.Talairach_translation, _graphe_sillon.Tmtktri_filename, _graphe_sillon.anterior_commissure, _graphe_sillon.bottom_filename, _graphe_sillon.boundingbox_max, _graphe_sillon.boundingbox_min, _graphe_sillon.cortical_bck, _graphe_sillon.cortical_global_bck, _graphe_sillon.filename_base, _graphe_sillon.fold_bck, _graphe_sillon.fold_tri, _graphe_sillon.gravity_center, _graphe_sillon.hull_junction_bck, _graphe_sillon.interhemi_point, _graphe_sillon.junction_bck, _graphe_sillon.oldtri_filename, _graphe_sillon.other_filename, _graphe_sillon.plidepassage_bck, _graphe_sillon.posterior_commissure, _graphe_sillon.roi_label, _graphe_sillon.ss_filename, _graphe_sillon.type_bck, _graphe_sillon.type_tri, _graphe_sillon.voxel_size, _Graph.name, _Graph.side FROM _graphe_sillon LEFT JOIN _Graph ON _graphe_sillon.eid=_Graph.eid
CREATE TRIGGER '_insert_graphe_sillon' INSTEAD OF INSERT ON 'graphe_sillon' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "graphe_sillon" );
  INSERT INTO graphe_sillon_( eid, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_filename, anterior_commissure, bottom_filename, boundingbox_max, boundingbox_min, cortical_bck, cortical_global_bck, filename_base, fold_bck, fold_tri, gravity_center, hull_junction_bck, interhemi_point, junction_bck, oldtri_filename, other_filename, plidepassage_bck, posterior_commissure, roi_label, ss_filename, type_bck, type_tri, voxel_size, name, side ) VALUES ( last_insert_rowid(), NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_filename, NEW.anterior_commissure, NEW.bottom_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.cortical_bck, NEW.cortical_global_bck, NEW.filename_base, NEW.fold_bck, NEW.fold_tri, NEW.gravity_center, NEW.hull_junction_bck, NEW.interhemi_point, NEW.junction_bck, NEW.oldtri_filename, NEW.other_filename, NEW.plidepassage_bck, NEW.posterior_commissure, NEW.roi_label, NEW.ss_filename, NEW.type_bck, NEW.type_tri, NEW.voxel_size, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_graphe_sillon_' INSTEAD OF INSERT ON 'graphe_sillon_' FOR EACH ROW
BEGIN
  INSERT INTO _graphe_sillon( eid, Tal_boundingbox_max, Tal_boundingbox_min, Talairach_rotation, Talairach_scale, Talairach_translation, Tmtktri_filename, anterior_commissure, bottom_filename, boundingbox_max, boundingbox_min, cortical_bck, cortical_global_bck, filename_base, fold_bck, fold_tri, gravity_center, hull_junction_bck, interhemi_point, junction_bck, oldtri_filename, other_filename, plidepassage_bck, posterior_commissure, roi_label, ss_filename, type_bck, type_tri, voxel_size ) VALUES ( NEW.eid, NEW.Tal_boundingbox_max, NEW.Tal_boundingbox_min, NEW.Talairach_rotation, NEW.Talairach_scale, NEW.Talairach_translation, NEW.Tmtktri_filename, NEW.anterior_commissure, NEW.bottom_filename, NEW.boundingbox_max, NEW.boundingbox_min, NEW.cortical_bck, NEW.cortical_global_bck, NEW.filename_base, NEW.fold_bck, NEW.fold_tri, NEW.gravity_center, NEW.hull_junction_bck, NEW.interhemi_point, NEW.junction_bck, NEW.oldtri_filename, NEW.other_filename, NEW.plidepassage_bck, NEW.posterior_commissure, NEW.roi_label, NEW.ss_filename, NEW.type_bck, NEW.type_tri, NEW.voxel_size );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW hierarchy AS SELECT _hierarchy.eid AS eid, _hierarchy.graph_syntax AS graph_syntax,_Vertex.graph AS graph FROM _hierarchy, _Vertex WHERE _hierarchy.eid=_Vertex.eid
CREATE VIEW hierarchy_ AS SELECT _hierarchy.eid, _hierarchy.graph_syntax, _Vertex.graph FROM _hierarchy LEFT JOIN _Vertex ON _hierarchy.eid=_Vertex.eid
CREATE TRIGGER '_insert_hierarchy' INSTEAD OF INSERT ON 'hierarchy' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "hierarchy" );
  INSERT INTO hierarchy_( eid, graph_syntax, graph ) VALUES ( last_insert_rowid(), NEW.graph_syntax, NEW.graph );
END
CREATE TRIGGER '_insert_hierarchy_' INSTEAD OF INSERT ON 'hierarchy_' FOR EACH ROW
BEGIN
  INSERT INTO _hierarchy( eid, graph_syntax ) VALUES ( NEW.eid, NEW.graph_syntax );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW hull AS SELECT _hull.eid AS eid, _hull.graph_index AS graph_index, _hull.name AS name, _hull.point_number AS point_number, _hull.size AS size, _hull.skeleton_label AS skeleton_label,_Vertex.graph AS graph FROM _hull, _Vertex WHERE _hull.eid=_Vertex.eid
CREATE VIEW hull_ AS SELECT _hull.eid, _hull.graph_index, _hull.name, _hull.point_number, _hull.size, _hull.skeleton_label, _Vertex.graph FROM _hull LEFT JOIN _Vertex ON _hull.eid=_Vertex.eid
CREATE TRIGGER '_insert_hull' INSTEAD OF INSERT ON 'hull' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "hull" );
  INSERT INTO hull_( eid, graph_index, name, point_number, size, skeleton_label, graph ) VALUES ( last_insert_rowid(), NEW.graph_index, NEW.name, NEW.point_number, NEW.size, NEW.skeleton_label, NEW.graph );
END
CREATE TRIGGER '_insert_hull_' INSTEAD OF INSERT ON 'hull_' FOR EACH ROW
BEGIN
  INSERT INTO _hull( eid, graph_index, name, point_number, size, skeleton_label ) VALUES ( NEW.eid, NEW.graph_index, NEW.name, NEW.point_number, NEW.size, NEW.skeleton_label );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW hull_junction AS SELECT _hull_junction.eid AS eid, _hull_junction.direction AS direction, _hull_junction.extremity1 AS extremity1, _hull_junction.extremity2 AS extremity2, _hull_junction.junction_filename AS junction_filename, _hull_junction.junction_label AS junction_label, _hull_junction.junction_mesh_filename AS junction_mesh_filename, _hull_junction.junction_mesh_label AS junction_mesh_label, _hull_junction.length AS length, _hull_junction.point_number AS point_number, _hull_junction.refdirection AS refdirection, _hull_junction.refextremity1 AS refextremity1, _hull_junction.refextremity2 AS refextremity2, _hull_junction.reflength AS reflength, _hull_junction.refsize AS refsize, _hull_junction.size AS size,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _hull_junction, _Edge WHERE _hull_junction.eid=_Edge.eid
CREATE VIEW hull_junction_ AS SELECT _hull_junction.eid, _hull_junction.direction, _hull_junction.extremity1, _hull_junction.extremity2, _hull_junction.junction_filename, _hull_junction.junction_label, _hull_junction.junction_mesh_filename, _hull_junction.junction_mesh_label, _hull_junction.length, _hull_junction.point_number, _hull_junction.refdirection, _hull_junction.refextremity1, _hull_junction.refextremity2, _hull_junction.reflength, _hull_junction.refsize, _hull_junction.size, _Edge.vertex1, _Edge.vertex2 FROM _hull_junction LEFT JOIN _Edge ON _hull_junction.eid=_Edge.eid
CREATE TRIGGER '_insert_hull_junction' INSTEAD OF INSERT ON 'hull_junction' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "hull_junction" );
  INSERT INTO hull_junction_( eid, direction, extremity1, extremity2, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, length, point_number, refdirection, refextremity1, refextremity2, reflength, refsize, size, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.direction, NEW.extremity1, NEW.extremity2, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.length, NEW.point_number, NEW.refdirection, NEW.refextremity1, NEW.refextremity2, NEW.reflength, NEW.refsize, NEW.size, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_hull_junction_' INSTEAD OF INSERT ON 'hull_junction_' FOR EACH ROW
BEGIN
  INSERT INTO _hull_junction( eid, direction, extremity1, extremity2, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, length, point_number, refdirection, refextremity1, refextremity2, reflength, refsize, size ) VALUES ( NEW.eid, NEW.direction, NEW.extremity1, NEW.extremity2, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.length, NEW.point_number, NEW.refdirection, NEW.refextremity1, NEW.refextremity2, NEW.reflength, NEW.refsize, NEW.size );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW junction AS SELECT _junction.eid AS eid, _junction.direction AS direction, _junction.extremity1 AS extremity1, _junction.extremity2 AS extremity2, _junction.junction_filename AS junction_filename, _junction.junction_label AS junction_label, _junction.junction_mesh_filename AS junction_mesh_filename, _junction.junction_mesh_label AS junction_mesh_label, _junction.length AS length, _junction.maxdepth AS maxdepth, _junction.mindepth AS mindepth, _junction.point_number AS point_number, _junction.refdirection AS refdirection, _junction.refextremity1 AS refextremity1, _junction.refextremity2 AS refextremity2, _junction.reflength AS reflength, _junction.refmaxdepth AS refmaxdepth, _junction.refmindepth AS refmindepth, _junction.refsize AS refsize, _junction.roi_label AS roi_label, _junction.size AS size,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _junction, _Edge WHERE _junction.eid=_Edge.eid
CREATE VIEW junction_ AS SELECT _junction.eid, _junction.direction, _junction.extremity1, _junction.extremity2, _junction.junction_filename, _junction.junction_label, _junction.junction_mesh_filename, _junction.junction_mesh_label, _junction.length, _junction.maxdepth, _junction.mindepth, _junction.point_number, _junction.refdirection, _junction.refextremity1, _junction.refextremity2, _junction.reflength, _junction.refmaxdepth, _junction.refmindepth, _junction.refsize, _junction.roi_label, _junction.size, _Edge.vertex1, _Edge.vertex2 FROM _junction LEFT JOIN _Edge ON _junction.eid=_Edge.eid
CREATE TRIGGER '_insert_junction' INSTEAD OF INSERT ON 'junction' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "junction" );
  INSERT INTO junction_( eid, direction, extremity1, extremity2, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, length, maxdepth, mindepth, point_number, refdirection, refextremity1, refextremity2, reflength, refmaxdepth, refmindepth, refsize, roi_label, size, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.direction, NEW.extremity1, NEW.extremity2, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.length, NEW.maxdepth, NEW.mindepth, NEW.point_number, NEW.refdirection, NEW.refextremity1, NEW.refextremity2, NEW.reflength, NEW.refmaxdepth, NEW.refmindepth, NEW.refsize, NEW.roi_label, NEW.size, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_junction_' INSTEAD OF INSERT ON 'junction_' FOR EACH ROW
BEGIN
  INSERT INTO _junction( eid, direction, extremity1, extremity2, junction_filename, junction_label, junction_mesh_filename, junction_mesh_label, length, maxdepth, mindepth, point_number, refdirection, refextremity1, refextremity2, reflength, refmaxdepth, refmindepth, refsize, roi_label, size ) VALUES ( NEW.eid, NEW.direction, NEW.extremity1, NEW.extremity2, NEW.junction_filename, NEW.junction_label, NEW.junction_mesh_filename, NEW.junction_mesh_label, NEW.length, NEW.maxdepth, NEW.mindepth, NEW.point_number, NEW.refdirection, NEW.refextremity1, NEW.refextremity2, NEW.reflength, NEW.refmaxdepth, NEW.refmindepth, NEW.refsize, NEW.roi_label, NEW.size );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW model_edge AS SELECT _model_edge.eid AS eid, _model_edge.label1 AS label1, _model_edge.label2 AS label2, _model_edge.model_file AS model_file, _model_edge.noinstance_count AS noinstance_count, _model_edge.occurence_count AS occurence_count,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _model_edge, _Edge WHERE _model_edge.eid=_Edge.eid
CREATE VIEW model_edge_ AS SELECT _model_edge.eid, _model_edge.label1, _model_edge.label2, _model_edge.model_file, _model_edge.noinstance_count, _model_edge.occurence_count, _Edge.vertex1, _Edge.vertex2 FROM _model_edge LEFT JOIN _Edge ON _model_edge.eid=_Edge.eid
CREATE TRIGGER '_insert_model_edge' INSTEAD OF INSERT ON 'model_edge' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "model_edge" );
  INSERT INTO model_edge_( eid, label1, label2, model_file, noinstance_count, occurence_count, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.label1, NEW.label2, NEW.model_file, NEW.noinstance_count, NEW.occurence_count, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_model_edge_' INSTEAD OF INSERT ON 'model_edge_' FOR EACH ROW
BEGIN
  INSERT INTO _model_edge( eid, label1, label2, model_file, noinstance_count, occurence_count ) VALUES ( NEW.eid, NEW.label1, NEW.label2, NEW.model_file, NEW.noinstance_count, NEW.occurence_count );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW model_graph AS SELECT _model_graph.eid AS eid, _model_graph.Tmtktri_filename AS Tmtktri_filename, _model_graph.default_model_file AS default_model_file, _model_graph.default_nomenclature AS default_nomenclature, _model_graph.default_selector AS default_selector, _model_graph.filename_base AS filename_base, _model_graph.fold_tri AS fold_tri, _model_graph.label_list AS label_list, _model_graph.model_VERSION AS model_VERSION, _model_graph.model_compatibility_data_VERSION AS model_compatibility_data_VERSION, _model_graph.model_file AS model_file, _model_graph.model_finder AS model_finder, _model_graph.nbase_graphs AS nbase_graphs, _model_graph.type_tri AS type_tri, _model_graph.void_label AS void_label,_Graph.name AS name, _Graph.side AS side FROM _model_graph, _Graph WHERE _model_graph.eid=_Graph.eid
CREATE VIEW model_graph_ AS SELECT _model_graph.eid, _model_graph.Tmtktri_filename, _model_graph.default_model_file, _model_graph.default_nomenclature, _model_graph.default_selector, _model_graph.filename_base, _model_graph.fold_tri, _model_graph.label_list, _model_graph.model_VERSION, _model_graph.model_compatibility_data_VERSION, _model_graph.model_file, _model_graph.model_finder, _model_graph.nbase_graphs, _model_graph.type_tri, _model_graph.void_label, _Graph.name, _Graph.side FROM _model_graph LEFT JOIN _Graph ON _model_graph.eid=_Graph.eid
CREATE TRIGGER '_insert_model_graph' INSTEAD OF INSERT ON 'model_graph' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "model_graph" );
  INSERT INTO model_graph_( eid, Tmtktri_filename, default_model_file, default_nomenclature, default_selector, filename_base, fold_tri, label_list, model_VERSION, model_compatibility_data_VERSION, model_file, model_finder, nbase_graphs, type_tri, void_label, name, side ) VALUES ( last_insert_rowid(), NEW.Tmtktri_filename, NEW.default_model_file, NEW.default_nomenclature, NEW.default_selector, NEW.filename_base, NEW.fold_tri, NEW.label_list, NEW.model_VERSION, NEW.model_compatibility_data_VERSION, NEW.model_file, NEW.model_finder, NEW.nbase_graphs, NEW.type_tri, NEW.void_label, NEW.name, NEW.side );
END
CREATE TRIGGER '_insert_model_graph_' INSTEAD OF INSERT ON 'model_graph_' FOR EACH ROW
BEGIN
  INSERT INTO _model_graph( eid, Tmtktri_filename, default_model_file, default_nomenclature, default_selector, filename_base, fold_tri, label_list, model_VERSION, model_compatibility_data_VERSION, model_file, model_finder, nbase_graphs, type_tri, void_label ) VALUES ( NEW.eid, NEW.Tmtktri_filename, NEW.default_model_file, NEW.default_nomenclature, NEW.default_selector, NEW.filename_base, NEW.fold_tri, NEW.label_list, NEW.model_VERSION, NEW.model_compatibility_data_VERSION, NEW.model_file, NEW.model_finder, NEW.nbase_graphs, NEW.type_tri, NEW.void_label );
  INSERT INTO Graph_( eid, name, side ) VALUES ( NEW.eid, NEW.name, NEW.side );
END
CREATE VIEW model_node AS SELECT _model_node.eid AS eid, _model_node.Tmtktri_filename AS Tmtktri_filename, _model_node.domain_file AS domain_file, _model_node.label AS label, _model_node.model_file AS model_file, _model_node.noinstance_count AS noinstance_count, _model_node.occurence_count AS occurence_count,_Vertex.graph AS graph FROM _model_node, _Vertex WHERE _model_node.eid=_Vertex.eid
CREATE VIEW model_node_ AS SELECT _model_node.eid, _model_node.Tmtktri_filename, _model_node.domain_file, _model_node.label, _model_node.model_file, _model_node.noinstance_count, _model_node.occurence_count, _Vertex.graph FROM _model_node LEFT JOIN _Vertex ON _model_node.eid=_Vertex.eid
CREATE TRIGGER '_insert_model_node' INSTEAD OF INSERT ON 'model_node' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "model_node" );
  INSERT INTO model_node_( eid, Tmtktri_filename, domain_file, label, model_file, noinstance_count, occurence_count, graph ) VALUES ( last_insert_rowid(), NEW.Tmtktri_filename, NEW.domain_file, NEW.label, NEW.model_file, NEW.noinstance_count, NEW.occurence_count, NEW.graph );
END
CREATE TRIGGER '_insert_model_node_' INSTEAD OF INSERT ON 'model_node_' FOR EACH ROW
BEGIN
  INSERT INTO _model_node( eid, Tmtktri_filename, domain_file, label, model_file, noinstance_count, occurence_count ) VALUES ( NEW.eid, NEW.Tmtktri_filename, NEW.domain_file, NEW.label, NEW.model_file, NEW.noinstance_count, NEW.occurence_count );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW nucleus AS SELECT _nucleus.eid AS eid, _nucleus.Tmtktri_filename AS Tmtktri_filename, _nucleus.Tmtktri_label AS Tmtktri_label, _nucleus.bucket_filename AS bucket_filename, _nucleus.bucket_label AS bucket_label, _nucleus.graph_index AS graph_index, _nucleus.name AS name, _nucleus.point_number AS point_number, _nucleus.roi_label AS roi_label, _nucleus.size AS size,_Vertex.graph AS graph FROM _nucleus, _Vertex WHERE _nucleus.eid=_Vertex.eid
CREATE VIEW nucleus_ AS SELECT _nucleus.eid, _nucleus.Tmtktri_filename, _nucleus.Tmtktri_label, _nucleus.bucket_filename, _nucleus.bucket_label, _nucleus.graph_index, _nucleus.name, _nucleus.point_number, _nucleus.roi_label, _nucleus.size, _Vertex.graph FROM _nucleus LEFT JOIN _Vertex ON _nucleus.eid=_Vertex.eid
CREATE TRIGGER '_insert_nucleus' INSTEAD OF INSERT ON 'nucleus' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "nucleus" );
  INSERT INTO nucleus_( eid, Tmtktri_filename, Tmtktri_label, bucket_filename, bucket_label, graph_index, name, point_number, roi_label, size, graph ) VALUES ( last_insert_rowid(), NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.bucket_filename, NEW.bucket_label, NEW.graph_index, NEW.name, NEW.point_number, NEW.roi_label, NEW.size, NEW.graph );
END
CREATE TRIGGER '_insert_nucleus_' INSTEAD OF INSERT ON 'nucleus_' FOR EACH ROW
BEGIN
  INSERT INTO _nucleus( eid, Tmtktri_filename, Tmtktri_label, bucket_filename, bucket_label, graph_index, name, point_number, roi_label, size ) VALUES ( NEW.eid, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.bucket_filename, NEW.bucket_label, NEW.graph_index, NEW.name, NEW.point_number, NEW.roi_label, NEW.size );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW plidepassage AS SELECT _plidepassage.eid AS eid, _plidepassage.depth AS depth, _plidepassage.location AS location, _plidepassage.plidepassage_filename AS plidepassage_filename, _plidepassage.plidepassage_label AS plidepassage_label, _plidepassage.plidepassage_mesh_filename AS plidepassage_mesh_filename, _plidepassage.plidepassage_mesh_label AS plidepassage_mesh_label, _plidepassage.point_number AS point_number, _plidepassage.refdepth AS refdepth, _plidepassage.reflocation AS reflocation, _plidepassage.refsize AS refsize, _plidepassage.roi_label AS roi_label, _plidepassage.size AS size,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _plidepassage, _Edge WHERE _plidepassage.eid=_Edge.eid
CREATE VIEW plidepassage_ AS SELECT _plidepassage.eid, _plidepassage.depth, _plidepassage.location, _plidepassage.plidepassage_filename, _plidepassage.plidepassage_label, _plidepassage.plidepassage_mesh_filename, _plidepassage.plidepassage_mesh_label, _plidepassage.point_number, _plidepassage.refdepth, _plidepassage.reflocation, _plidepassage.refsize, _plidepassage.roi_label, _plidepassage.size, _Edge.vertex1, _Edge.vertex2 FROM _plidepassage LEFT JOIN _Edge ON _plidepassage.eid=_Edge.eid
CREATE TRIGGER '_insert_plidepassage' INSTEAD OF INSERT ON 'plidepassage' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "plidepassage" );
  INSERT INTO plidepassage_( eid, depth, location, plidepassage_filename, plidepassage_label, plidepassage_mesh_filename, plidepassage_mesh_label, point_number, refdepth, reflocation, refsize, roi_label, size, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.depth, NEW.location, NEW.plidepassage_filename, NEW.plidepassage_label, NEW.plidepassage_mesh_filename, NEW.plidepassage_mesh_label, NEW.point_number, NEW.refdepth, NEW.reflocation, NEW.refsize, NEW.roi_label, NEW.size, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_plidepassage_' INSTEAD OF INSERT ON 'plidepassage_' FOR EACH ROW
BEGIN
  INSERT INTO _plidepassage( eid, depth, location, plidepassage_filename, plidepassage_label, plidepassage_mesh_filename, plidepassage_mesh_label, point_number, refdepth, reflocation, refsize, roi_label, size ) VALUES ( NEW.eid, NEW.depth, NEW.location, NEW.plidepassage_filename, NEW.plidepassage_label, NEW.plidepassage_mesh_filename, NEW.plidepassage_mesh_label, NEW.point_number, NEW.refdepth, NEW.reflocation, NEW.refsize, NEW.roi_label, NEW.size );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW roi AS SELECT _roi.eid AS eid, _roi.Tmtktri_filename AS Tmtktri_filename, _roi.Tmtktri_label AS Tmtktri_label, _roi.bucket_filename AS bucket_filename, _roi.custom_num_val AS custom_num_val, _roi.gravity_center AS gravity_center, _roi.graph_index AS graph_index, _roi.name AS name, _roi.point_number AS point_number, _roi.roi_filename AS roi_filename, _roi.roi_label AS roi_label, _roi.roi_mesh_filename AS roi_mesh_filename, _roi.roi_mesh_label AS roi_mesh_label, _roi.size AS size, _roi.surface_area AS surface_area,_Vertex.graph AS graph FROM _roi, _Vertex WHERE _roi.eid=_Vertex.eid
CREATE VIEW roi_ AS SELECT _roi.eid, _roi.Tmtktri_filename, _roi.Tmtktri_label, _roi.bucket_filename, _roi.custom_num_val, _roi.gravity_center, _roi.graph_index, _roi.name, _roi.point_number, _roi.roi_filename, _roi.roi_label, _roi.roi_mesh_filename, _roi.roi_mesh_label, _roi.size, _roi.surface_area, _Vertex.graph FROM _roi LEFT JOIN _Vertex ON _roi.eid=_Vertex.eid
CREATE TRIGGER '_insert_roi' INSTEAD OF INSERT ON 'roi' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "roi" );
  INSERT INTO roi_( eid, Tmtktri_filename, Tmtktri_label, bucket_filename, custom_num_val, gravity_center, graph_index, name, point_number, roi_filename, roi_label, roi_mesh_filename, roi_mesh_label, size, surface_area, graph ) VALUES ( last_insert_rowid(), NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.bucket_filename, NEW.custom_num_val, NEW.gravity_center, NEW.graph_index, NEW.name, NEW.point_number, NEW.roi_filename, NEW.roi_label, NEW.roi_mesh_filename, NEW.roi_mesh_label, NEW.size, NEW.surface_area, NEW.graph );
END
CREATE TRIGGER '_insert_roi_' INSTEAD OF INSERT ON 'roi_' FOR EACH ROW
BEGIN
  INSERT INTO _roi( eid, Tmtktri_filename, Tmtktri_label, bucket_filename, custom_num_val, gravity_center, graph_index, name, point_number, roi_filename, roi_label, roi_mesh_filename, roi_mesh_label, size, surface_area ) VALUES ( NEW.eid, NEW.Tmtktri_filename, NEW.Tmtktri_label, NEW.bucket_filename, NEW.custom_num_val, NEW.gravity_center, NEW.graph_index, NEW.name, NEW.point_number, NEW.roi_filename, NEW.roi_label, NEW.roi_mesh_filename, NEW.roi_mesh_label, NEW.size, NEW.surface_area );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW roi_junction AS SELECT _roi_junction.eid AS eid, _roi_junction.roi_mesh_junction_filename AS roi_mesh_junction_filename, _roi_junction.roi_mesh_junction_label AS roi_mesh_junction_label, _roi_junction.size AS size,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _roi_junction, _Edge WHERE _roi_junction.eid=_Edge.eid
CREATE VIEW roi_junction_ AS SELECT _roi_junction.eid, _roi_junction.roi_mesh_junction_filename, _roi_junction.roi_mesh_junction_label, _roi_junction.size, _Edge.vertex1, _Edge.vertex2 FROM _roi_junction LEFT JOIN _Edge ON _roi_junction.eid=_Edge.eid
CREATE TRIGGER '_insert_roi_junction' INSTEAD OF INSERT ON 'roi_junction' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "roi_junction" );
  INSERT INTO roi_junction_( eid, roi_mesh_junction_filename, roi_mesh_junction_label, size, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.roi_mesh_junction_filename, NEW.roi_mesh_junction_label, NEW.size, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_roi_junction_' INSTEAD OF INSERT ON 'roi_junction_' FOR EACH ROW
BEGIN
  INSERT INTO _roi_junction( eid, roi_mesh_junction_filename, roi_mesh_junction_label, size ) VALUES ( NEW.eid, NEW.roi_mesh_junction_filename, NEW.roi_mesh_junction_label, NEW.size );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW s2g AS SELECT _s2g.eid AS eid, _s2g.type AS type,_Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _s2g, _Edge WHERE _s2g.eid=_Edge.eid
CREATE VIEW s2g_ AS SELECT _s2g.eid, _s2g.type, _Edge.vertex1, _Edge.vertex2 FROM _s2g LEFT JOIN _Edge ON _s2g.eid=_Edge.eid
CREATE TRIGGER '_insert_s2g' INSTEAD OF INSERT ON 's2g' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "s2g" );
  INSERT INTO s2g_( eid, type, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.type, NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_s2g_' INSTEAD OF INSERT ON 's2g_' FOR EACH ROW
BEGIN
  INSERT INTO _s2g( eid, type ) VALUES ( NEW.eid, NEW.type );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW scalebloblink AS SELECT _scalebloblink.eid AS eid, _Edge.vertex1 AS vertex1, _Edge.vertex2 AS vertex2 FROM _scalebloblink, _Edge WHERE _scalebloblink.eid=_Edge.eid
CREATE VIEW scalebloblink_ AS SELECT _scalebloblink.eid, _Edge.vertex1, _Edge.vertex2 FROM _scalebloblink LEFT JOIN _Edge ON _scalebloblink.eid=_Edge.eid
CREATE TRIGGER '_insert_scalebloblink' INSTEAD OF INSERT ON 'scalebloblink' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "scalebloblink" );
  INSERT INTO scalebloblink_( eid, vertex1, vertex2 ) VALUES ( last_insert_rowid(), NEW.vertex1, NEW.vertex2 );
END
CREATE TRIGGER '_insert_scalebloblink_' INSTEAD OF INSERT ON 'scalebloblink_' FOR EACH ROW
BEGIN
  INSERT INTO _scalebloblink( eid ) VALUES ( NEW.eid );
  INSERT INTO Edge_( eid, vertex1, vertex2 ) VALUES ( NEW.eid, NEW.vertex1, NEW.vertex2 );
END
CREATE VIEW ssb AS SELECT _ssb.eid AS eid, _ssb.boundingbox_max AS boundingbox_max, _ssb.boundingbox_min AS boundingbox_min, _ssb.gravity_center AS gravity_center, _ssb.graph_index AS graph_index, _ssb.label AS label, _ssb.label_occur_number AS label_occur_number, _ssb.lifeTime AS lifeTime, _ssb.name AS name, _ssb.node AS node, _ssb.nodes AS nodes, _ssb.rank AS rank, _ssb.significance AS significance, _ssb.ssb_filename AS ssb_filename, _ssb.ssb_label AS ssb_label, _ssb.subject AS subject, _ssb.t AS t, _ssb.tValue AS tValue, _ssb.tmax AS tmax, _ssb.tmin AS tmin, _ssb.trep AS trep,_Vertex.graph AS graph FROM _ssb, _Vertex WHERE _ssb.eid=_Vertex.eid
CREATE VIEW ssb_ AS SELECT _ssb.eid, _ssb.boundingbox_max, _ssb.boundingbox_min, _ssb.gravity_center, _ssb.graph_index, _ssb.label, _ssb.label_occur_number, _ssb.lifeTime, _ssb.name, _ssb.node, _ssb.nodes, _ssb.rank, _ssb.significance, _ssb.ssb_filename, _ssb.ssb_label, _ssb.subject, _ssb.t, _ssb.tValue, _ssb.tmax, _ssb.tmin, _ssb.trep, _Vertex.graph FROM _ssb LEFT JOIN _Vertex ON _ssb.eid=_Vertex.eid
CREATE TRIGGER '_insert_ssb' INSTEAD OF INSERT ON 'ssb' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "ssb" );
  INSERT INTO ssb_( eid, boundingbox_max, boundingbox_min, gravity_center, graph_index, label, label_occur_number, lifeTime, name, node, nodes, rank, significance, ssb_filename, ssb_label, subject, t, tValue, tmax, tmin, trep, graph ) VALUES ( last_insert_rowid(), NEW.boundingbox_max, NEW.boundingbox_min, NEW.gravity_center, NEW.graph_index, NEW.label, NEW.label_occur_number, NEW.lifeTime, NEW.name, NEW.node, NEW.nodes, NEW.rank, NEW.significance, NEW.ssb_filename, NEW.ssb_label, NEW.subject, NEW.t, NEW.tValue, NEW.tmax, NEW.tmin, NEW.trep, NEW.graph );
END
CREATE TRIGGER '_insert_ssb_' INSTEAD OF INSERT ON 'ssb_' FOR EACH ROW
BEGIN
  INSERT INTO _ssb( eid, boundingbox_max, boundingbox_min, gravity_center, graph_index, label, label_occur_number, lifeTime, name, node, nodes, rank, significance, ssb_filename, ssb_label, subject, t, tValue, tmax, tmin, trep ) VALUES ( NEW.eid, NEW.boundingbox_max, NEW.boundingbox_min, NEW.gravity_center, NEW.graph_index, NEW.label, NEW.label_occur_number, NEW.lifeTime, NEW.name, NEW.node, NEW.nodes, NEW.rank, NEW.significance, NEW.ssb_filename, NEW.ssb_label, NEW.subject, NEW.t, NEW.tValue, NEW.tmax, NEW.tmin, NEW.trep );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
CREATE VIEW ssblob AS SELECT _ssblob.eid AS eid, _ssblob.activation AS activation, _ssblob.area AS area, _ssblob.barycenter AS barycenter, _ssblob.boundingbox_max AS boundingbox_max, _ssblob.boundingbox_min AS boundingbox_min, _ssblob.gravity_center AS gravity_center, _ssblob.graph_index AS graph_index, _ssblob.label AS label, _ssblob.label_occur_number AS label_occur_number, _ssblob.lifeTime AS lifeTime, _ssblob.maxContrast AS maxContrast, _ssblob.maxIntensity AS maxIntensity, _ssblob.meanContrast AS meanContrast, _ssblob.meanIntensity AS meanIntensity, _ssblob.name AS name, _ssblob.node AS node, _ssblob.nodes_list AS nodes_list, _ssblob.rank AS rank, _ssblob.refgravity_center AS refgravity_center, _ssblob.significance AS significance, _ssblob.sim_rankperc AS sim_rankperc, _ssblob.ssblob_filename AS ssblob_filename, _ssblob.ssblob_label AS ssblob_label, _ssblob.ssblobbucket_filename AS ssblobbucket_filename, _ssblob.ssblobbucket_label AS ssblobbucket_label, _ssblob.t AS t, _ssblob.t2 AS t2, _ssblob.tValue AS tValue, _ssblob.t_rankperc AS t_rankperc, _ssblob.tmax AS tmax, _ssblob.tmin AS tmin, _ssblob.trep AS trep,_Vertex.graph AS graph FROM _ssblob, _Vertex WHERE _ssblob.eid=_Vertex.eid
CREATE VIEW ssblob_ AS SELECT _ssblob.eid, _ssblob.activation, _ssblob.area, _ssblob.barycenter, _ssblob.boundingbox_max, _ssblob.boundingbox_min, _ssblob.gravity_center, _ssblob.graph_index, _ssblob.label, _ssblob.label_occur_number, _ssblob.lifeTime, _ssblob.maxContrast, _ssblob.maxIntensity, _ssblob.meanContrast, _ssblob.meanIntensity, _ssblob.name, _ssblob.node, _ssblob.nodes_list, _ssblob.rank, _ssblob.refgravity_center, _ssblob.significance, _ssblob.sim_rankperc, _ssblob.ssblob_filename, _ssblob.ssblob_label, _ssblob.ssblobbucket_filename, _ssblob.ssblobbucket_label, _ssblob.t, _ssblob.t2, _ssblob.tValue, _ssblob.t_rankperc, _ssblob.tmax, _ssblob.tmin, _ssblob.trep, _Vertex.graph FROM _ssblob LEFT JOIN _Vertex ON _ssblob.eid=_Vertex.eid
CREATE TRIGGER '_insert_ssblob' INSTEAD OF INSERT ON 'ssblob' FOR EACH ROW
BEGIN
  INSERT INTO class( class_name ) VALUES( "ssblob" );
  INSERT INTO ssblob_( eid, activation, area, barycenter, boundingbox_max, boundingbox_min, gravity_center, graph_index, label, label_occur_number, lifeTime, maxContrast, maxIntensity, meanContrast, meanIntensity, name, node, nodes_list, rank, refgravity_center, significance, sim_rankperc, ssblob_filename, ssblob_label, ssblobbucket_filename, ssblobbucket_label, t, t2, tValue, t_rankperc, tmax, tmin, trep, graph ) VALUES ( last_insert_rowid(), NEW.activation, NEW.area, NEW.barycenter, NEW.boundingbox_max, NEW.boundingbox_min, NEW.gravity_center, NEW.graph_index, NEW.label, NEW.label_occur_number, NEW.lifeTime, NEW.maxContrast, NEW.maxIntensity, NEW.meanContrast, NEW.meanIntensity, NEW.name, NEW.node, NEW.nodes_list, NEW.rank, NEW.refgravity_center, NEW.significance, NEW.sim_rankperc, NEW.ssblob_filename, NEW.ssblob_label, NEW.ssblobbucket_filename, NEW.ssblobbucket_label, NEW.t, NEW.t2, NEW.tValue, NEW.t_rankperc, NEW.tmax, NEW.tmin, NEW.trep, NEW.graph );
END
CREATE TRIGGER '_insert_ssblob_' INSTEAD OF INSERT ON 'ssblob_' FOR EACH ROW
BEGIN
  INSERT INTO _ssblob( eid, activation, area, barycenter, boundingbox_max, boundingbox_min, gravity_center, graph_index, label, label_occur_number, lifeTime, maxContrast, maxIntensity, meanContrast, meanIntensity, name, node, nodes_list, rank, refgravity_center, significance, sim_rankperc, ssblob_filename, ssblob_label, ssblobbucket_filename, ssblobbucket_label, t, t2, tValue, t_rankperc, tmax, tmin, trep ) VALUES ( NEW.eid, NEW.activation, NEW.area, NEW.barycenter, NEW.boundingbox_max, NEW.boundingbox_min, NEW.gravity_center, NEW.graph_index, NEW.label, NEW.label_occur_number, NEW.lifeTime, NEW.maxContrast, NEW.maxIntensity, NEW.meanContrast, NEW.meanIntensity, NEW.name, NEW.node, NEW.nodes_list, NEW.rank, NEW.refgravity_center, NEW.significance, NEW.sim_rankperc, NEW.ssblob_filename, NEW.ssblob_label, NEW.ssblobbucket_filename, NEW.ssblobbucket_label, NEW.t, NEW.t2, NEW.tValue, NEW.t_rankperc, NEW.tmax, NEW.tmin, NEW.trep );
  INSERT INTO Vertex_( eid, graph ) VALUES ( NEW.eid, NEW.graph );
END
INSERT INTO soma_schemas( name, version ) VALUES ( 'soma.base', '0.1.0' )
INSERT INTO soma_schemas( name, version ) VALUES ( 'soma.aims.graph', '0.0.1' )
INSERT INTO soma_classes( name, base ) VALUES ( 'soma_schemas', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'soma_classes', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'soma_attributes', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'Graph', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'Vertex', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'Edge', NULL )
INSERT INTO soma_classes( name, base ) VALUES ( 'BlobsArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'ClusterArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'CorticalFoldArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'NucleusArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'PrimalSketchArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'RoiArg', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'b2b', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'bifurcation', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'blob_saddle_link', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'cluster', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'cortical', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'fold', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'fold_name', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'glb', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'graphe_sillon', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'hierarchy', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'hull', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'hull_junction', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'junction', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'model_edge', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'model_graph', 'Graph' )
INSERT INTO soma_classes( name, base ) VALUES ( 'model_node', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'nucleus', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'plidepassage', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'roi', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'roi_junction', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 's2g', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'scalebloblink', 'Edge' )
INSERT INTO soma_classes( name, base ) VALUES ( 'ssb', 'Vertex' )
INSERT INTO soma_classes( name, base ) VALUES ( 'ssblob', 'Vertex' )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','Tmtktri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','Tmtktri_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','bucket_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','custom_num_val','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','point_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','roi_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','roi_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','roi_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','size','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi','surface_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_classes','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_classes','base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hierarchy','graph_syntax','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'Graph','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'Graph','side','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','CSF_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','GM_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','GM_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','GM_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','LCR_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','LCR_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','LCR_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','Tal_boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','Tal_boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','Tmtktri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','Tmtktri_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','WM_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','WM_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','bottom_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','bottom_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','bottom_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','bottom_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','bottom_point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','boundingbox_max','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','boundingbox_min','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','cortexHemi_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','cortexHemi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','cortexWhite_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','cortexWhite_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','custom_num_val','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','depth_direction','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','depth_direction_weight','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','direction','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','grey_surface_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','hull_normal','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','hull_normal_weight','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','maxdepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','mean_depth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','mid_interface_voxels','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','mindepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','moments','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','normal','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','oldtri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','oldtri_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','other_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','other_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','other_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','other_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','other_point_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refdepth_direction','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refdirection','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refgravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refhull_normal','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refmaxdepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refmean_depth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refmindepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refmoments','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refnormal','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refsize','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','refsurface_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','rootsbassin','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','size','Float()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','skeleton_label','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','ss_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','ss_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','ss_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','ss_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','ss_point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','surface_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','talcovar','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','thickness_mean','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','thickness_std','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','used_labels','Dictionary()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold','white_surface_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','direction','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','extremity1','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','extremity2','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','junction_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','junction_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','junction_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','junction_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','length','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','refdirection','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','refextremity1','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','refextremity2','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','reflength','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','refsize','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull_junction','size','Float()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','blob_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','label_property','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','ssblob_bck','String()','ssblob.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','ssblob_global_bck','String()','ssblob.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','ssblob_global_tri','String()','ssblob.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','ssblob_tri','String()','ssblob.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','sujet','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'PrimalSketchArg','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 's2g','type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','activation','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','barycenter','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','label_occur_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','lifeTime','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','maxContrast','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','maxIntensity','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','meanContrast','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','meanIntensity','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','name','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','node','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','nodes_list','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','rank','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','refgravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','significance','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','sim_rankperc','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','ssblob_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','ssblob_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','ssblobbucket_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','ssblobbucket_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','t','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','t2','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','tValue','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','t_rankperc','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','tmax','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','tmin','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssblob','trep','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Tal_boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Tal_boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Talairach_rotation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Talairach_scale','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Talairach_translation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','anterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','bottom_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','boundingbox_max','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','boundingbox_min','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','cortical_bck','String()','cortical.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','cortical_global_bck','String()','cortical.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','filename_base','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','fold_bck','String()','fold.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','fold_tri','String()','fold.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','hull_junction_bck','String()','hull_junction.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','interhemi_point','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','junction_bck','String()','junction.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','oldtri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','other_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','plidepassage_bck','String()','plidepassage.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','posterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','ss_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'graphe_sillon','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'Vertex','graph',"Reference( 'Graph' )",NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold_name','color','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold_name','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'fold_name','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','RoiArg_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','anterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','bucket_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','interhemi_point','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','label_property','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','origin','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','posterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_bck','String()','roi.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_global_bck','String()','roi.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_global_tri','String()','roi.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_global_vol','String()','roi.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_tri','String()','roi.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_junction_global_tri','String()','roi_junction.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_junction_tri','String()','roi_junction.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_mesh_junction_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_mesh_junction_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','roi_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','spm_normalized','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','spm_radio_convention','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','spm_spm2_normalization','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','type_global_vol','String()','type.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'RoiArg','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','SS1nearest','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','SS2nearest','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','cortical_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','cortical_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','cortical_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','cortical_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','dist','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','length','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refSS1nearest','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refSS2nearest','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refdist','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','reflength','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refmean_connected_dir','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refmean_connected_dist','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refsize','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','refstd_connected_dist','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cortical','size','Float()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','ClusterArg_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Tal_boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Tal_boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Talairach_rotation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Talairach_scale','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Talairach_translation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Tmtktri_global_tri','String()','Tmtktri.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','Tmtktri_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','bucket_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','bucket_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','bucket_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_bck','String()','cluster.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_global_bck','String()','cluster.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_global_tri','String()','cluster.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_global_vol','String()','cluster.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_tri','String()','cluster.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','cluster_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','label_property','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','maximum_global_tri','String()','maximum.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','maxscale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','mesh_filename_maximum','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','mesh_filename_minimum','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','mesh_filename_minimum2','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','minimum_global_tri','String()','minimum.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','minimum2_global_tri','String()','minimum2.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','minscale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','origin','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','roi_label_maximum','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','roi_label_minimum','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','roi_label_minimum2','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','scales','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','spm_normalized','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','spm_radio_convention','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','spm_spm2_normalization','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_global_tex','String()','type.global.tex',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_global_vol','String()','type.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_tex','String()','type.tex',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ClusterArg','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_schemas','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_schemas','version','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','depth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','location','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','plidepassage_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','plidepassage_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','plidepassage_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','plidepassage_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','refdepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','reflocation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','refsize','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'plidepassage','size','Float()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','NucleusArg_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','Tmtktri_global_bck','String()','Tmtktri.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','Tmtktri_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_bck','String()','bucket.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_global_bck','String()','bucket.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_global_tri','String()','bucket.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_global_vol','String()','bucket.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_tri','String()','bucket.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','bucket_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','label_property','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','nucleus_bck','String()','nucleus.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','nucleus_global_bck','String()','nucleus.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','nucleus_global_tri','String()','nucleus.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','nucleus_global_vol','String()','nucleus.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','nucleus_tri','String()','nucleus.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','origin','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','roi_bck','String()','roi.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','roi_global_bck','String()','roi.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','roi_global_tri','String()','roi.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','roi_global_vol','String()','roi.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','roi_tri','String()','roi.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','spm_normalized','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','spm_radio_convention','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','spm_spm2_normalization','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','type_global_vol','String()','type.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'NucleusArg','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','direction','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','extremity1','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','extremity2','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','junction_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','junction_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','junction_mesh_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','junction_mesh_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','length','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','maxdepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','mindepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','point_number','Int()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refdirection','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refextremity1','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refextremity2','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','reflength','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refmaxdepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refmindepth','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','refsize','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'junction','size','Float()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','CSF_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','CorticalFoldArg_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','GM_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','GM_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','GM_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','LCR_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','LCR_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','LCR_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tal_boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tal_boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Talairach_rotation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Talairach_scale','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Talairach_translation','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tmtktri_global_tri','String()','Tmtktri.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tmtktri_tri','String()','Tmtktri.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','Tmtktri_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','WM_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','WM_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','anterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_bck','String()','bottom.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_global_bck','String()','bottom.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','bottom_volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','brain_hull_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','brain_hull_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortexHemi_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortexHemi_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortexWhite_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortexWhite_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_bck','String()','cortical.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_global_bck','String()','cortical.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_global_vol','String()','cortical.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','cortical_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','custom_num_val','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','flipped_hemispheres','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','fold_bck','String()','fold.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','fold_global_bck','String()','fold.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','fold_global_tri','String()','fold.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','fold_global_vol','String()','fold.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','fold_tri','String()','fold.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','folds_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_bck','String()','hull_junction.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_global_bck','String()','hull_junction.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_global_vol','String()','hull_junction.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','hull_junction_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','interhemi_point','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_bck','String()','junction.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_global_bck','String()','junction.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_global_vol','String()','junction.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','junction_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','label_property','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','oldtri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','oldtri_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','origin','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_bck','String()','other.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_global_bck','String()','other.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','other_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_bck','String()','plidepassage.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_global_bck','String()','plidepassage.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','plidepassage_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','posterior_commissure','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','refbrain_hull_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','refbrain_hull_volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','reffolds_area','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','reftotal_sulci_length','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','spm_normalized','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','spm_radio_convention','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','spm_spm2_normalization','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_bck','String()','ss.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_global_bck','String()','ss.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_Volume_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_mesh_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','ss_mesh_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','thickness_mean','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','thickness_std','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','total_sulci_length','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_global_tex','String()','type.global.tex',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_global_vol','String()','type.global.vol',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_tex','String()','type.tex',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'CorticalFoldArg','voxel_size','FloatVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull','point_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull','size','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'hull','skeleton_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','Tmtktri_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','default_model_file','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','default_nomenclature','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','default_selector','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','fold_tri','String()','fold.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','label_list','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','model_compatibility_data_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','model_file','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','model_finder','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','nbase_graphs','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_graph','void_label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_edge','label1','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_edge','label2','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_edge','model_file','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_edge','noinstance_count','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_edge','occurence_count','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi_junction','roi_mesh_junction_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi_junction','roi_mesh_junction_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'roi_junction','size','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'Edge','vertex1',"Reference( 'Vertex' )",NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'Edge','vertex2',"Reference( 'Vertex' )",NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','Tmtktri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','Tmtktri_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','bucket_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','bucket_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','point_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'nucleus','size','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'b2b','similarity','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'b2b','type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','label_occur_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','lifeTime','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','name','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','node','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','nodes','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','rank','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','significance','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','ssb_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','ssb_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','subject','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','t','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','tValue','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','tmax','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','tmin','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'ssb','trep','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','soma_class',"Reference( 'soma_class' )",NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','type','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','optional','Bool()',NULL,0,'False' )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'soma_attributes','default_value','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','boundingbox_max','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','boundingbox_min','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','glb_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','glb_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','nodes','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','scale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','t','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'glb','tValue','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'bifurcation','blob_down','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'bifurcation','blob_up','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'bifurcation','type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','Talairach_par_mm_endpar_','FloatVector()','Talairach(mm)',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','Tmtktri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','Tmtktri_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','apparitionflag','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','blob_saddle_type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','bucket_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','bucket_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','cluster_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','cluster_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','custom_num_val','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','gravity_center','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','gray_level_blobs','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','graph_index','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','jamflag_down','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','jamflag_up','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','label','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','lifetime','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','maximum','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','maximum_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','maximum_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','maximum_position','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','maxscale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','mesh_filename_maximum','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','mesh_filename_minimum','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','mesh_filename_minimum2','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum2_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum2_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minimum_position','FloatVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','minscale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','name','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','point_number','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','roi_label','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','roi_label_maximum','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','roi_label_minimum','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','roi_label_minimum2','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','scale','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','size','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','surface','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','volume','Float()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','wflag_down','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'cluster','wflag_up','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','Tmtktri_filename','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','domain_file','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','label','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','model_file','String()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','noinstance_count','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'model_node','occurence_count','Int()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','boundingbox_max','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','boundingbox_min','IntVector()',NULL,0,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','datagraph_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','datagraph_compatibility_model_VERSION','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','filename_base','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','glb_global_tri','String()','glb.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','glb_tri','String()','glb.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','glb_filename','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','glb_label','IntVector()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','indiv_graphs','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','latitude','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','latitudes','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','longitude','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','longitudes','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','mesh','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','meshes','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','representation_mesh','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','representation_meshes','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','sujet','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','sujets','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','texture','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','textures','List()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','type','String()',NULL,1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','type_bck','String()','type.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','type_global_bck','String()','type.global.bck',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','type_global_tri','String()','type.global.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','type_tri','String()','type.tri',1,NULL )
INSERT INTO soma_attributes( soma_class, name, type, label, optional, default_value ) VALUES ( 'BlobsArg','voxel_size','FloatVector()',NULL,0,NULL )
